{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:9001/Laboratorio1'; // Cambia esto a tu URL base\n\n// Crear un objeto para el servicio\nconst CoordenadasService = {\n  // Método para obtener todas las coordenadas\n  getCoordenadas: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/coordenadas`); // URL para obtener todas las coordenadas\n      return response.data; // Devuelve los datos recibidos\n    } catch (error) {\n      console.error('Error fetching coordinates:', error);\n      throw error; // Lanza el error para que pueda ser manejado en el componente\n    }\n  },\n  getCoordenadasPorIds: async ids => {\n    try {\n      const idsString = ids.join(',');\n      const response = await axios.get(`${API_URL}/coordenadas/lista`, {\n        params: {\n          ids: idsString\n        },\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching coordinates for multiple IDs:', error);\n      throw error;\n    }\n  },\n  // Método para obtener las coordenadas individuales por ID\n  getCoordenadasIndividual: async (id, token) => {\n    try {\n      const response = await axios.get(`${API_URL}/coordenadas/${id}`, {\n        headers: {\n          'Authorization': `Bearer eyJhbGciOiJIUzUxMiJ9.eyJqdGkiOiJQUE9PSUlfSldUIiwic3ViIjoibGl6ZXRoY2FybyIsImF1dGhvcml0aWVzIjpbIlJPTEVfVVNFUiJdLCJpYXQiOjE3Mjg3MDk4NjYsImV4cCI6MTcyOTU3Mzg2Nn0.eldgvkN0MnjzuK7PSktA7tk9oqdE--3N3PB08M4-AzWYTFFLMjAqUADZdJkrdXvHcwjVTH2IKyNfnuDE3oIYqw`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching individual coordinates:', error);\n      throw error; // Lanza el error para que pueda ser manejado en el componente\n    }\n  }\n};\nexport default CoordenadasService;","map":{"version":3,"names":["axios","API_URL","CoordenadasService","getCoordenadas","response","get","data","error","console","getCoordenadasPorIds","ids","idsString","join","params","headers","localStorage","getItem","getCoordenadasIndividual","id","token"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/services/CoordenadasService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:9001/Laboratorio1'; // Cambia esto a tu URL base\r\n\r\n// Crear un objeto para el servicio\r\nconst CoordenadasService = {\r\n  // Método para obtener todas las coordenadas\r\n  getCoordenadas: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/coordenadas`); // URL para obtener todas las coordenadas\r\n      return response.data; // Devuelve los datos recibidos\r\n    } catch (error) {\r\n      console.error('Error fetching coordinates:', error);\r\n      throw error; // Lanza el error para que pueda ser manejado en el componente\r\n    }\r\n  },\r\n\r\n  getCoordenadasPorIds: async (ids) => {\r\n    try {\r\n      const idsString = ids.join(',');\r\n      const response = await axios.get(`${API_URL}/coordenadas/lista`, {\r\n        params: { ids: idsString },\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching coordinates for multiple IDs:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  // Método para obtener las coordenadas individuales por ID\r\n  getCoordenadasIndividual: async (id, token) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/coordenadas/${id}`, {\r\n        headers: {\r\n          'Authorization': `Bearer eyJhbGciOiJIUzUxMiJ9.eyJqdGkiOiJQUE9PSUlfSldUIiwic3ViIjoibGl6ZXRoY2FybyIsImF1dGhvcml0aWVzIjpbIlJPTEVfVVNFUiJdLCJpYXQiOjE3Mjg3MDk4NjYsImV4cCI6MTcyOTU3Mzg2Nn0.eldgvkN0MnjzuK7PSktA7tk9oqdE--3N3PB08M4-AzWYTFFLMjAqUADZdJkrdXvHcwjVTH2IKyNfnuDE3oIYqw` \r\n        }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching individual coordinates:', error);\r\n      throw error; // Lanza el error para que pueda ser manejado en el componente\r\n    }\r\n  }\r\n};\r\n\r\nexport default CoordenadasService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC,CAAC,CAAC;;AAEtD;AACA,MAAMC,kBAAkB,GAAG;EACzB;EACAC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,cAAc,CAAC,CAAC,CAAC;MAC5D,OAAOG,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAEDE,oBAAoB,EAAE,MAAOC,GAAG,IAAK;IACnC,IAAI;MACF,MAAMC,SAAS,GAAGD,GAAG,CAACE,IAAI,CAAC,GAAG,CAAC;MAC/B,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,oBAAoB,EAAE;QAC/DY,MAAM,EAAE;UAAEH,GAAG,EAAEC;QAAU,CAAC;QAC1BG,OAAO,EAAE;UACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D;MACF,CAAC,CAAC;MACF,OAAOZ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,MAAMA,KAAK;IACb;EACF,CAAC;EAGD;EACAU,wBAAwB,EAAE,MAAAA,CAAOC,EAAE,EAAEC,KAAK,KAAK;IAC7C,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,gBAAgBiB,EAAE,EAAE,EAAE;QAC/DJ,OAAO,EAAE;UACP,eAAe,EAAE;QACnB;MACF,CAAC,CAAC;MACF,OAAOV,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D,MAAMA,KAAK,CAAC,CAAC;IACf;EACF;AACF,CAAC;AAED,eAAeL,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}