{"ast":null,"code":"import axios from \"axios\";\nimport Swal from \"sweetalert2\";\nconst USUARIO_BASE_REST_API_URL = \"http://localhost:9001/Laboratorio1/personas\";\nconst USUARIO_UPDATE_REST_API_URL = \"http://localhost:9001/Laboratorio1/persona\"; // Nueva URL para actualizar personas\n\nclass PersonaService {\n  getAll() {\n    const token = localStorage.getItem('token');\n    return axios.get(USUARIO_BASE_REST_API_URL, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => {\n      return res.data;\n    }).catch(error => {\n      console.error(\"Error al obtener las personas:\", error);\n      throw error;\n    });\n  }\n  register(data) {\n    return axios.post(USUARIO_BASE_REST_API_URL, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      return res.data;\n    }).catch(error => {\n      console.error(\"Error al registrar:\", error);\n      throw error;\n    });\n  }\n  authenticate(username, password, apiKey) {\n    return axios.post('http://localhost:9001/authenticate', {\n      username,\n      password\n    }, {\n      headers: {\n        apikey: apiKey\n      }\n    }).then(res => {\n      return res.data;\n    }).catch(error => {\n      console.error(\"Error al autenticar:\", error);\n      throw error;\n    });\n  }\n  update(data) {\n    const token = localStorage.getItem('token');\n    return axios.put(USUARIO_UPDATE_REST_API_URL, data, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      return res.data;\n    }).catch(error => {\n      console.error(\"Error al actualizar:\", error);\n      throw error;\n    });\n  }\n  async eliminarPersona(id) {\n    const result = await Swal.fire({\n      title: '¿Estás seguro?',\n      text: '¡No podrás recuperar este registro!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: '¡Sí, eliminar!'\n    });\n    if (result.isConfirmed) {\n      try {\n        const response = await fetch(`http://localhost:9002/Laboratorio1/persona/${id}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          console.log(\"Persona eliminada con éxito.\");\n          return true; // O puedes retornar algo más si lo necesitas\n        } else {\n          console.error(\"Error al eliminar la persona.\");\n          return false;\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud:\", error);\n        return false;\n      }\n    } else {\n      console.log(\"Eliminación cancelada.\");\n      return false;\n    }\n  }\n}\nexport default new PersonaService();","map":{"version":3,"names":["axios","Swal","USUARIO_BASE_REST_API_URL","USUARIO_UPDATE_REST_API_URL","PersonaService","getAll","token","localStorage","getItem","get","headers","then","res","data","catch","error","console","register","post","authenticate","username","password","apiKey","apikey","update","put","eliminarPersona","id","result","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","response","fetch","method","ok","log"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/Home.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst USUARIO_BASE_REST_API_URL = \"http://localhost:9001/Laboratorio1/personas\";\r\nconst USUARIO_UPDATE_REST_API_URL = \"http://localhost:9001/Laboratorio1/persona\"; // Nueva URL para actualizar personas\r\n\r\nclass PersonaService {\r\n    getAll() {\r\n        const token = localStorage.getItem('token');\r\n        return axios.get(USUARIO_BASE_REST_API_URL, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(res => {\r\n            return res.data;\r\n        }).catch(error => {\r\n            console.error(\"Error al obtener las personas:\", error);\r\n            throw error;\r\n        });\r\n    }\r\n\r\n    register(data) {\r\n        return axios.post(USUARIO_BASE_REST_API_URL, data, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            return res.data;\r\n        }).catch(error => {\r\n            console.error(\"Error al registrar:\", error);\r\n            throw error;\r\n        });\r\n    }\r\n\r\n    authenticate(username, password, apiKey) {\r\n        return axios.post('http://localhost:9001/authenticate', {\r\n            username,\r\n            password\r\n        }, {\r\n            headers: {\r\n                apikey: apiKey\r\n            }\r\n        }).then(res => {\r\n            return res.data;\r\n        }).catch(error => {\r\n            console.error(\"Error al autenticar:\", error);\r\n            throw error;\r\n        });\r\n    }\r\n\r\n    update(data) {\r\n        const token = localStorage.getItem('token');\r\n        return axios.put(USUARIO_UPDATE_REST_API_URL, data, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            return res.data;\r\n        }).catch(error => {\r\n            console.error(\"Error al actualizar:\", error);\r\n            throw error;\r\n        });\r\n    }\r\n\r\n    async eliminarPersona(id) {\r\n        const result = await Swal.fire({\r\n            title: '¿Estás seguro?',\r\n            text: '¡No podrás recuperar este registro!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: '¡Sí, eliminar!'\r\n        });\r\n\r\n        if (result.isConfirmed) {\r\n            try {\r\n                const response = await fetch(`http://localhost:9002/Laboratorio1/persona/${id}`, {\r\n                    method: 'DELETE',\r\n                });\r\n                \r\n                if (response.ok) {\r\n                    console.log(\"Persona eliminada con éxito.\");\r\n                    return true; // O puedes retornar algo más si lo necesitas\r\n                } else {\r\n                    console.error(\"Error al eliminar la persona.\");\r\n                    return false;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error en la solicitud:\", error);\r\n                return false;\r\n            }\r\n        } else {\r\n            console.log(\"Eliminación cancelada.\");\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new PersonaService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}