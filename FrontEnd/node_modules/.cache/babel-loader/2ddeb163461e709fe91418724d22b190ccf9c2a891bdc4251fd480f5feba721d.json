{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PersonaService from '../services/PersonaService';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [personas, setPersonas] = useState([]);\n  const [selectedPersonas, setSelectedPersonas] = useState([]);\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    PersonaService.getAllPersons().then(data => {\n      if (data) {\n        setPersonas(data);\n      }\n    }).catch(error => console.error('Error fetching personas', error));\n  }, []);\n  const initMap = useCallback(() => {\n    const loader = new Loader({\n      apiKey: \"AIzaSyBtmSbtAkZMgopeMNzXW4NC4LyzXRLr-ck\",\n      version: \"weekly\"\n    });\n    loader.load().then(() => {\n      const mapInstance = new window.google.maps.Map(document.getElementById('map'), {\n        center: {\n          lat: 4.43889,\n          lng: -75.23222\n        },\n        zoom: 10\n      });\n      setMap(mapInstance);\n    });\n  }, []);\n  useEffect(() => {\n    initMap();\n  }, [initMap]);\n  useEffect(() => {\n    if (map && selectedPersonas.length > 0) {\n      // Clear existing markers\n      markers.forEach(marker => marker.setMap(null));\n      const newMarkers = selectedPersonas.map(persona => {\n        return new window.google.maps.Marker({\n          position: {\n            lat: persona.latitud,\n            lng: persona.longitud\n          },\n          map: map,\n          title: persona.primerNombre + ' ' + persona.primerApellido\n        });\n      });\n      setMarkers(newMarkers);\n\n      // Adjust map bounds to fit all markers\n      const bounds = new window.google.maps.LatLngBounds();\n      newMarkers.forEach(marker => bounds.extend(marker.getPosition()));\n      map.fitBounds(bounds);\n    }\n  }, [map, selectedPersonas]);\n  const handleSelectChange = e => {\n    const selectedIds = Array.from(e.target.selectedOptions, option => option.value);\n    const selectedPersons = personas.filter(persona => selectedIds.includes(persona.id.toString()));\n    setSelectedPersonas(selectedPersons);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Mapa de Ubicaciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          style: {\n            height: '400px',\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"personasSelect\",\n            children: \"Seleccione personas:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"personasSelect\",\n            className: \"form-control\",\n            multiple: true,\n            onChange: handleSelectChange,\n            size: \"10\",\n            children: personas.map(persona => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: persona.id,\n              children: `${persona.primerNombre} ${persona.primerApellido}`\n            }, persona.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/home'),\n          children: \"Volver a Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"0dyOvygmGT2C0k8kSemeTa/vXyk=\", false, function () {\n  return [useNavigate];\n});\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useNavigate","PersonaService","Loader","jsxDEV","_jsxDEV","MapComponent","_s","personas","setPersonas","selectedPersonas","setSelectedPersonas","map","setMap","markers","setMarkers","navigate","getAllPersons","then","data","catch","error","console","initMap","loader","apiKey","version","load","mapInstance","window","google","maps","Map","document","getElementById","center","lat","lng","zoom","length","forEach","marker","newMarkers","persona","Marker","position","latitud","longitud","title","primerNombre","primerApellido","bounds","LatLngBounds","extend","getPosition","fitBounds","handleSelectChange","e","selectedIds","Array","from","target","selectedOptions","option","value","selectedPersons","filter","includes","id","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","htmlFor","multiple","onChange","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PersonaService from '../services/PersonaService';\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst MapComponent = () => {\r\n  const [personas, setPersonas] = useState([]);\r\n  const [selectedPersonas, setSelectedPersonas] = useState([]);\r\n  const [map, setMap] = useState(null);\r\n  const [markers, setMarkers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    PersonaService.getAllPersons()\r\n      .then(data => {\r\n        if (data) {\r\n          setPersonas(data);\r\n        }\r\n      })\r\n      .catch(error => console.error('Error fetching personas', error));\r\n  }, []);\r\n\r\n  const initMap = useCallback(() => {\r\n    const loader = new Loader({\r\n      apiKey: \"AIzaSyBtmSbtAkZMgopeMNzXW4NC4LyzXRLr-ck\",\r\n      version: \"weekly\",\r\n    });\r\n\r\n    loader.load().then(() => {\r\n      const mapInstance = new window.google.maps.Map(document.getElementById('map'), {\r\n        center: { lat: 4.43889, lng: -75.23222 },\r\n        zoom: 10,\r\n      });\r\n      setMap(mapInstance);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initMap();\r\n  }, [initMap]);\r\n\r\n  useEffect(() => {\r\n    if (map && selectedPersonas.length > 0) {\r\n      // Clear existing markers\r\n      markers.forEach(marker => marker.setMap(null));\r\n      \r\n      const newMarkers = selectedPersonas.map(persona => {\r\n        return new window.google.maps.Marker({\r\n          position: { lat: persona.latitud, lng: persona.longitud },\r\n          map: map,\r\n          title: persona.primerNombre + ' ' + persona.primerApellido,\r\n        });\r\n      });\r\n\r\n      setMarkers(newMarkers);\r\n\r\n      // Adjust map bounds to fit all markers\r\n      const bounds = new window.google.maps.LatLngBounds();\r\n      newMarkers.forEach(marker => bounds.extend(marker.getPosition()));\r\n      map.fitBounds(bounds);\r\n    }\r\n  }, [map, selectedPersonas]);\r\n\r\n  const handleSelectChange = (e) => {\r\n    const selectedIds = Array.from(e.target.selectedOptions, option => option.value);\r\n    const selectedPersons = personas.filter(persona => selectedIds.includes(persona.id.toString()));\r\n    setSelectedPersonas(selectedPersons);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"mb-4\">Mapa de Ubicaciones</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          <div id=\"map\" style={{ height: '400px', width: '100%' }}></div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"personasSelect\">Seleccione personas:</label>\r\n            <select \r\n              id=\"personasSelect\" \r\n              className=\"form-control\" \r\n              multiple \r\n              onChange={handleSelectChange}\r\n              size=\"10\"\r\n            >\r\n              {personas.map(persona => (\r\n                <option key={persona.id} value={persona.id}>\r\n                  {`${persona.primerNombre} ${persona.primerApellido}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <button className=\"btn btn-primary mt-3\" onClick={() => navigate('/home')}>\r\n            Volver a Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}