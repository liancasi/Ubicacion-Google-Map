{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\UpdatePerson.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport PersonaService from '../services/PersonaService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePerson = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Inicializamos persona como null y luego lo asignamos si location.state está disponible\n  const [persona, setPersona] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.persona) || null);\n  const [primerNombre, setPrimerNombre] = useState('');\n  const [segundoNombre, setSegundoNombre] = useState('');\n\n  // Usamos useEffect para establecer los valores iniciales de los campos solo si persona está disponible\n  useEffect(() => {\n    if (persona) {\n      setPrimerNombre(persona.primerNombre);\n      setSegundoNombre(persona.segundoNombre);\n    }\n  }, [persona]);\n  const handleUpdate = async () => {\n    const updatedPersona = {\n      ...persona,\n      primerNombre,\n      segundoNombre\n    };\n    await PersonaService.update(updatedPersona); // Llama al servicio para actualizar\n    navigate('/home'); // Redirige después de actualizar\n  };\n  if (!persona) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No se encontr\\xF3 la informaci\\xF3n de la persona.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Actualizar Persona\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: primerNombre,\n      onChange: e => setPrimerNombre(e.target.value),\n      placeholder: \"Primer Nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: segundoNombre,\n      onChange: e => setSegundoNombre(e.target.value),\n      placeholder: \"Segundo Nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdate,\n      children: \"Actualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePerson, \"8kKXdqIC3zsCiWwwvsxUd5prtmU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = UpdatePerson;\nexport default UpdatePerson;\nvar _c;\n$RefreshReg$(_c, \"UpdatePerson\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","PersonaService","jsxDEV","_jsxDEV","UpdatePerson","_s","_location$state","navigate","location","persona","setPersona","state","primerNombre","setPrimerNombre","segundoNombre","setSegundoNombre","handleUpdate","updatedPersona","update","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/UpdatePerson.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport PersonaService from '../services/PersonaService';\r\n\r\nconst UpdatePerson = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    \r\n    // Inicializamos persona como null y luego lo asignamos si location.state está disponible\r\n    const [persona, setPersona] = useState(location.state?.persona || null);\r\n    const [primerNombre, setPrimerNombre] = useState('');\r\n    const [segundoNombre, setSegundoNombre] = useState('');\r\n\r\n    // Usamos useEffect para establecer los valores iniciales de los campos solo si persona está disponible\r\n    useEffect(() => {\r\n        if (persona) {\r\n            setPrimerNombre(persona.primerNombre);\r\n            setSegundoNombre(persona.segundoNombre);\r\n        }\r\n    }, [persona]);\r\n\r\n    const handleUpdate = async () => {\r\n        const updatedPersona = { ...persona, primerNombre, segundoNombre };\r\n        await PersonaService.update(updatedPersona); // Llama al servicio para actualizar\r\n        navigate('/home'); // Redirige después de actualizar\r\n    };\r\n\r\n    if (!persona) {\r\n        return <div>No se encontró la información de la persona.</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Actualizar Persona</h2>\r\n            <input \r\n                value={primerNombre} \r\n                onChange={(e) => setPrimerNombre(e.target.value)} \r\n                placeholder=\"Primer Nombre\" \r\n            />\r\n            <input \r\n                value={segundoNombre} \r\n                onChange={(e) => setSegundoNombre(e.target.value)} \r\n                placeholder=\"Segundo Nombre\" \r\n            />\r\n            <button onClick={handleUpdate}>Actualizar</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdatePerson;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACvB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAAQ,eAAA,GAAAE,QAAQ,CAACG,KAAK,cAAAL,eAAA,uBAAdA,eAAA,CAAgBG,OAAO,KAAI,IAAI,CAAC;EACvE,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAD,SAAS,CAAC,MAAM;IACZ,IAAIY,OAAO,EAAE;MACTI,eAAe,CAACJ,OAAO,CAACG,YAAY,CAAC;MACrCG,gBAAgB,CAACN,OAAO,CAACK,aAAa,CAAC;IAC3C;EACJ,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,cAAc,GAAG;MAAE,GAAGR,OAAO;MAAEG,YAAY;MAAEE;IAAc,CAAC;IAClE,MAAMb,cAAc,CAACiB,MAAM,CAACD,cAAc,CAAC,CAAC,CAAC;IAC7CV,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,IAAI,CAACE,OAAO,EAAE;IACV,oBAAON,OAAA;MAAAgB,QAAA,EAAK;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClE;EAEA,oBACIpB,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BpB,OAAA;MACIqB,KAAK,EAAEZ,YAAa;MACpBa,QAAQ,EAAGC,CAAC,IAAKb,eAAe,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDI,WAAW,EAAC;IAAe;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFpB,OAAA;MACIqB,KAAK,EAAEV,aAAc;MACrBW,QAAQ,EAAGC,CAAC,IAAKX,gBAAgB,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDI,WAAW,EAAC;IAAgB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFpB,OAAA;MAAQ0B,OAAO,EAAEb,YAAa;MAAAG,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd,CAAC;AAAClB,EAAA,CA3CID,YAAY;EAAA,QACGJ,WAAW,EACXD,WAAW;AAAA;AAAA+B,EAAA,GAF1B1B,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}