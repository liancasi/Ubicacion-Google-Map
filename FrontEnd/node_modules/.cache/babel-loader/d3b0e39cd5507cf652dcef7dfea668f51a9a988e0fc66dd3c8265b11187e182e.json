{"ast":null,"code":"// src/services/CoordenadasService.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:9001/Laboratorio1'; // Cambia esto a tu URL base\n\nconst fetchCoordenadas = async () => {\n  try {\n    const coordenadas = await CoordenadasService.getCoordenadas();\n    console.log('Coordenadas recibidas:', coordenadas);\n\n    // Asegúrate de que las coordenadas sean correctas\n    if (!coordenadas || coordenadas.length === 0) {\n      console.error('No se recibieron coordenadas válidas.');\n      return;\n    }\n    const markersData = coordenadas.map(coord => ({\n      id: coord.id,\n      marca: coord.marca,\n      lat: parseFloat(coord.latitud),\n      lng: parseFloat(coord.longitud)\n    }));\n    console.log('Marcadores actuales:', markersData);\n    setMarkers(markersData);\n  } catch (error) {\n    console.error('Error fetching coordinates:', error);\n  }\n};\nexport default CoordenadasService;","map":{"version":3,"names":["axios","API_URL","fetchCoordenadas","coordenadas","CoordenadasService","getCoordenadas","console","log","length","error","markersData","map","coord","id","marca","lat","parseFloat","latitud","lng","longitud","setMarkers"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/services/CoordenadasService.js"],"sourcesContent":["// src/services/CoordenadasService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:9001/Laboratorio1'; // Cambia esto a tu URL base\r\n\r\nconst fetchCoordenadas = async () => {\r\n    try {\r\n      const coordenadas = await CoordenadasService.getCoordenadas();\r\n      console.log('Coordenadas recibidas:', coordenadas); \r\n  \r\n      // Asegúrate de que las coordenadas sean correctas\r\n      if (!coordenadas || coordenadas.length === 0) {\r\n        console.error('No se recibieron coordenadas válidas.');\r\n        return;\r\n      }\r\n  \r\n      const markersData = coordenadas.map(coord => ({\r\n        id: coord.id,\r\n        marca: coord.marca,\r\n        lat: parseFloat(coord.latitud),\r\n        lng: parseFloat(coord.longitud),\r\n      }));\r\n  \r\n      console.log('Marcadores actuales:', markersData);\r\n      setMarkers(markersData);\r\n    } catch (error) {\r\n      console.error('Error fetching coordinates:', error);\r\n    }\r\n  };\r\n  \r\n\r\nexport default CoordenadasService;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC,CAAC,CAAC;;AAEtD,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMC,WAAW,GAAG,MAAMC,kBAAkB,CAACC,cAAc,CAAC,CAAC;IAC7DC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEJ,WAAW,CAAC;;IAElD;IACA,IAAI,CAACA,WAAW,IAAIA,WAAW,CAACK,MAAM,KAAK,CAAC,EAAE;MAC5CF,OAAO,CAACG,KAAK,CAAC,uCAAuC,CAAC;MACtD;IACF;IAEA,MAAMC,WAAW,GAAGP,WAAW,CAACQ,GAAG,CAACC,KAAK,KAAK;MAC5CC,EAAE,EAAED,KAAK,CAACC,EAAE;MACZC,KAAK,EAAEF,KAAK,CAACE,KAAK;MAClBC,GAAG,EAAEC,UAAU,CAACJ,KAAK,CAACK,OAAO,CAAC;MAC9BC,GAAG,EAAEF,UAAU,CAACJ,KAAK,CAACO,QAAQ;IAChC,CAAC,CAAC,CAAC;IAEHb,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,WAAW,CAAC;IAChDU,UAAU,CAACV,WAAW,CAAC;EACzB,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD;AACF,CAAC;AAGH,eAAeL,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}