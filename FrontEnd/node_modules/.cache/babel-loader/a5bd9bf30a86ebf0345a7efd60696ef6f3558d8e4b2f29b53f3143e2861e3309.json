{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\n/* global google */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [markers, setMarkers] = useState([]);\n  const mapRef = useRef(null);\n\n  // Suponiendo que obtienes los datos de los usuarios desde una API o estado\n  const fetchUsers = async () => {\n    // Aquí debes implementar la lógica para obtener la lista de usuarios con sus ubicaciones\n    const users = [{\n      id: 1,\n      name: 'Usuario 1',\n      lat: 4.610,\n      lng: -74.083\n    },\n    // Reemplaza con tus datos\n    {\n      id: 2,\n      name: 'Usuario 2',\n      lat: 4.611,\n      lng: -74.084\n    } // Reemplaza con tus datos\n    ];\n    setMarkers(users);\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const onLoad = map => {\n    mapRef.current = map;\n    markers.forEach(marker => {\n      // Crear un nuevo marcador para cada usuario\n      const googleMarker = new window.google.maps.Marker({\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        map: map,\n        title: marker.name\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"TU_API_KEY\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        height: '400px',\n        width: '800px'\n      },\n      center: {\n        lat: 4.610,\n        lng: -74.083\n      } // Ajusta al centro deseado\n      ,\n      zoom: 12,\n      onLoad: onLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"PVHqd5Xu9EbGviqTS0+hPGwyMUc=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","GoogleMap","LoadScript","jsxDEV","_jsxDEV","MapComponent","_s","markers","setMarkers","mapRef","fetchUsers","users","id","name","lat","lng","onLoad","map","current","forEach","marker","googleMarker","window","google","maps","Marker","position","title","googleMapsApiKey","children","mapContainerStyle","height","width","center","zoom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/MapComponent.jsx"],"sourcesContent":["/* global google */\r\n\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\r\n\r\nconst MapComponent = () => {\r\n  const [markers, setMarkers] = useState([]);\r\n  const mapRef = useRef(null);\r\n\r\n  // Suponiendo que obtienes los datos de los usuarios desde una API o estado\r\n  const fetchUsers = async () => {\r\n    // Aquí debes implementar la lógica para obtener la lista de usuarios con sus ubicaciones\r\n    const users = [\r\n      { id: 1, name: 'Usuario 1', lat: 4.610, lng: -74.083 }, // Reemplaza con tus datos\r\n      { id: 2, name: 'Usuario 2', lat: 4.611, lng: -74.084 }, // Reemplaza con tus datos\r\n    ];\r\n    setMarkers(users);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const onLoad = (map) => {\r\n    mapRef.current = map;\r\n    markers.forEach((marker) => {\r\n      // Crear un nuevo marcador para cada usuario\r\n      const googleMarker = new window.google.maps.Marker({\r\n        position: { lat: marker.lat, lng: marker.lng },\r\n        map: map,\r\n        title: marker.name,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"TU_API_KEY\">\r\n      <GoogleMap\r\n        mapContainerStyle={{ height: '400px', width: '800px' }}\r\n        center={{ lat: 4.610, lng: -74.083 }} // Ajusta al centro deseado\r\n        zoom={12}\r\n        onLoad={onLoad}\r\n      >\r\n        {/* Aquí no necesitas renderizar nada, los marcadores se crean en onLoad */}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n\r\n\r\n"],"mappings":";;AAAA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMS,MAAM,GAAGV,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACA,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACA,MAAMC,KAAK,GAAG,CACZ;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,GAAG,EAAE,KAAK;MAAEC,GAAG,EAAE,CAAC;IAAO,CAAC;IAAE;IACxD;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,GAAG,EAAE,KAAK;MAAEC,GAAG,EAAE,CAAC;IAAO,CAAC,CAAE;IAAA,CACzD;IACDP,UAAU,CAACG,KAAK,CAAC;EACnB,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,MAAM,GAAIC,GAAG,IAAK;IACtBR,MAAM,CAACS,OAAO,GAAGD,GAAG;IACpBV,OAAO,CAACY,OAAO,CAAEC,MAAM,IAAK;MAC1B;MACA,MAAMC,YAAY,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC;QACjDC,QAAQ,EAAE;UAAEZ,GAAG,EAAEM,MAAM,CAACN,GAAG;UAAEC,GAAG,EAAEK,MAAM,CAACL;QAAI,CAAC;QAC9CE,GAAG,EAAEA,GAAG;QACRU,KAAK,EAAEP,MAAM,CAACP;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,oBACET,OAAA,CAACF,UAAU;IAAC0B,gBAAgB,EAAC,YAAY;IAAAC,QAAA,eACvCzB,OAAA,CAACH,SAAS;MACR6B,iBAAiB,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAE;MACvDC,MAAM,EAAE;QAAEnB,GAAG,EAAE,KAAK;QAAEC,GAAG,EAAE,CAAC;MAAO,CAAE,CAAC;MAAA;MACtCmB,IAAI,EAAE,EAAG;MACTlB,MAAM,EAAEA;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAAChC,EAAA,CA1CID,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}