{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PersonaService from '../services/PersonaService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [personas, setPersonas] = useState([]);\n  const [selectedPersonas, setSelectedPersonas] = useState([]);\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    PersonaService.getAllPersons().then(data => {\n      if (data) {\n        setPersonas(data);\n      }\n    }).catch(error => console.error('Error al obtener personas', error));\n  }, []);\n  const initMap = useCallback(() => {\n    if (window.google && window.google.maps) {\n      const mapInstance = new window.google.maps.Map(document.getElementById('map'), {\n        center: {\n          lat: 4.43889,\n          lng: -75.23222\n        },\n        zoom: 10\n      });\n      setMap(mapInstance);\n    } else {\n      console.error('Google Maps no está cargado correctamente');\n    }\n  }, []);\n  useEffect(() => {\n    // Cargar el script de Google Maps\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=TU_API_KEY_AQUI&callback=initMap`;\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n    window.initMap = initMap;\n    return () => {\n      document.head.removeChild(script);\n    };\n  }, [initMap]);\n  useEffect(() => {\n    if (map && selectedPersonas.length > 0) {\n      markers.forEach(marker => marker.setMap(null));\n      PersonaService.fetchCoordinates(selectedPersonas.map(p => p.id)).then(coordinates => {\n        const newMarkers = coordinates.map(coord => {\n          const lat = parseFloat(coord.latitud);\n          const lng = parseFloat(coord.longitud);\n          if (isNaN(lat) || isNaN(lng)) {\n            console.error('Coordenadas inválidas:', coord);\n            return null;\n          }\n          const marker = new window.google.maps.Marker({\n            position: {\n              lat,\n              lng\n            },\n            map: map,\n            title: coord.nombre || 'Desconocido',\n            animation: window.google.maps.Animation.DROP\n          });\n          const infoWindow = new window.google.maps.InfoWindow({\n            content: `<div><strong>${coord.nombre}</strong><br>Lat: ${lat}<br>Lng: ${lng}</div>`\n          });\n          marker.addListener('click', () => {\n            infoWindow.open(map, marker);\n          });\n          return marker;\n        }).filter(marker => marker !== null);\n        setMarkers(newMarkers);\n        if (newMarkers.length > 0) {\n          const bounds = new window.google.maps.LatLngBounds();\n          newMarkers.forEach(marker => bounds.extend(marker.getPosition()));\n          map.fitBounds(bounds);\n        }\n      }).catch(error => console.error('Error al obtener coordenadas', error));\n    }\n  }, [map, selectedPersonas]);\n\n  // ... (el resto del código permanece igual)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"Mapa de Ubicaciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row gap-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full md:w-2/3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          className: \"h-[500px] w-full rounded-lg shadow-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"x7vCPktzQu/InRjVDi7YbkCXsGI=\", false, function () {\n  return [useNavigate];\n});\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useNavigate","PersonaService","jsxDEV","_jsxDEV","MapComponent","_s","personas","setPersonas","selectedPersonas","setSelectedPersonas","map","setMap","markers","setMarkers","searchTerm","setSearchTerm","navigate","getAllPersons","then","data","catch","error","console","initMap","window","google","maps","mapInstance","Map","document","getElementById","center","lat","lng","zoom","script","createElement","src","async","defer","head","appendChild","removeChild","length","forEach","marker","fetchCoordinates","p","id","coordinates","newMarkers","coord","parseFloat","latitud","longitud","isNaN","Marker","position","title","nombre","animation","Animation","DROP","infoWindow","InfoWindow","content","addListener","open","filter","bounds","LatLngBounds","extend","getPosition","fitBounds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PersonaService from '../services/PersonaService';\r\n\r\nconst MapComponent = () => {\r\n  const [personas, setPersonas] = useState([]);\r\n  const [selectedPersonas, setSelectedPersonas] = useState([]);\r\n  const [map, setMap] = useState(null);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    PersonaService.getAllPersons()\r\n      .then(data => {\r\n        if (data) {\r\n          setPersonas(data);\r\n        }\r\n      })\r\n      .catch(error => console.error('Error al obtener personas', error));\r\n  }, []);\r\n\r\n  const initMap = useCallback(() => {\r\n    if (window.google && window.google.maps) {\r\n      const mapInstance = new window.google.maps.Map(document.getElementById('map'), {\r\n        center: { lat: 4.43889, lng: -75.23222 },\r\n        zoom: 10,\r\n      });\r\n      setMap(mapInstance);\r\n    } else {\r\n      console.error('Google Maps no está cargado correctamente');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Cargar el script de Google Maps\r\n    const script = document.createElement('script');\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=TU_API_KEY_AQUI&callback=initMap`;\r\n    script.async = true;\r\n    script.defer = true;\r\n    document.head.appendChild(script);\r\n\r\n    window.initMap = initMap;\r\n\r\n    return () => {\r\n      document.head.removeChild(script);\r\n    };\r\n  }, [initMap]);\r\n\r\n  useEffect(() => {\r\n    if (map && selectedPersonas.length > 0) {\r\n      markers.forEach(marker => marker.setMap(null));\r\n      \r\n      PersonaService.fetchCoordinates(selectedPersonas.map(p => p.id))\r\n        .then(coordinates => {\r\n          const newMarkers = coordinates.map(coord => {\r\n            const lat = parseFloat(coord.latitud);\r\n            const lng = parseFloat(coord.longitud);\r\n            \r\n            if (isNaN(lat) || isNaN(lng)) {\r\n              console.error('Coordenadas inválidas:', coord);\r\n              return null;\r\n            }\r\n\r\n            const marker = new window.google.maps.Marker({\r\n              position: { lat, lng },\r\n              map: map,\r\n              title: coord.nombre || 'Desconocido',\r\n              animation: window.google.maps.Animation.DROP\r\n            });\r\n\r\n            const infoWindow = new window.google.maps.InfoWindow({\r\n              content: `<div><strong>${coord.nombre}</strong><br>Lat: ${lat}<br>Lng: ${lng}</div>`\r\n            });\r\n\r\n            marker.addListener('click', () => {\r\n              infoWindow.open(map, marker);\r\n            });\r\n\r\n            return marker;\r\n          }).filter(marker => marker !== null);\r\n\r\n          setMarkers(newMarkers);\r\n\r\n          if (newMarkers.length > 0) {\r\n            const bounds = new window.google.maps.LatLngBounds();\r\n            newMarkers.forEach(marker => bounds.extend(marker.getPosition()));\r\n            map.fitBounds(bounds);\r\n          }\r\n        })\r\n        .catch(error => console.error('Error al obtener coordenadas', error));\r\n    }\r\n  }, [map, selectedPersonas]);\r\n\r\n  // ... (el resto del código permanece igual)\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 bg-gray-100\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800\">Mapa de Ubicaciones</h2>\r\n      <div className=\"flex flex-col md:flex-row gap-6\">\r\n        <div className=\"w-full md:w-2/3\">\r\n          <div id=\"map\" className=\"h-[500px] w-full rounded-lg shadow-lg\"></div>\r\n        </div>\r\n        {/* ... (el resto del JSX permanece igual) */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}