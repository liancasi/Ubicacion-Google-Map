{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  coordinates\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const loader = new Loader({\n    apiKey: 'AIzaSyBtmSbtAkZMgopeMNzXW4NC4LyzXRLr-ck',\n    version: 'weekly'\n  });\n  useEffect(() => {\n    loader.load().then(() => {\n      // Inicializar el mapa\n      const map = new window.google.maps.Map(mapRef.current, {\n        center: {\n          lat: -4.4387,\n          lng: -75.2066\n        },\n        // Centrar el mapa en Tolima\n        zoom: 8\n      });\n\n      // Comprobar si hay coordenadas\n      if (coordinates && coordinates.length > 0) {\n        coordinates.forEach(coord => {\n          const lat = parseFloat(coord.latitud);\n          const lng = parseFloat(coord.longitud);\n\n          // Comprobar coordenadas válidas\n          if (!isNaN(lat) && !isNaN(lng)) {\n            // Crear contenido del marcador\n            const markerContent = document.createElement('div');\n            markerContent.style.background = 'white';\n            markerContent.style.padding = '5px';\n            markerContent.style.borderRadius = '5px';\n            markerContent.textContent = coord.nombre || 'Desconocido';\n\n            // Comprobar si AdvancedMarkerElement está definido\n            if (window.google.maps.marker && window.google.maps.marker.AdvancedMarkerElement) {\n              // Crear un nuevo marcador\n              const marker = new window.google.maps.marker.AdvancedMarkerElement({\n                position: {\n                  lat,\n                  lng\n                },\n                map: map,\n                content: markerContent // Usar el nodo DOM aquí\n              });\n            } else {\n              console.error('AdvancedMarkerElement no está definido');\n            }\n          } else {\n            console.error('Coordenadas inválidas:', coord);\n          }\n        });\n      } else {\n        console.error('No hay coordenadas disponibles');\n      }\n    }).catch(error => {\n      console.error('Error al cargar la API de Google Maps:', error);\n    });\n  }, [coordinates, loader]); // Añadir 'loader' como dependencia\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      height: '400px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","Loader","jsxDEV","_jsxDEV","MapComponent","coordinates","_s","mapRef","loader","apiKey","version","load","then","map","window","google","maps","Map","current","center","lat","lng","zoom","length","forEach","coord","parseFloat","latitud","longitud","isNaN","markerContent","document","createElement","style","background","padding","borderRadius","textContent","nombre","marker","AdvancedMarkerElement","position","content","console","error","catch","ref","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\n\r\nconst MapComponent = ({ coordinates }) => {\r\n  const mapRef = useRef(null);\r\n  const loader = new Loader({\r\n    apiKey: 'AIzaSyBtmSbtAkZMgopeMNzXW4NC4LyzXRLr-ck',\r\n    version: 'weekly',\r\n  });\r\n\r\n  useEffect(() => {\r\n    loader.load().then(() => {\r\n      // Inicializar el mapa\r\n      const map = new window.google.maps.Map(mapRef.current, {\r\n        center: { lat: -4.4387, lng: -75.2066 }, // Centrar el mapa en Tolima\r\n        zoom: 8,\r\n      });\r\n\r\n      // Comprobar si hay coordenadas\r\n      if (coordinates && coordinates.length > 0) {\r\n        coordinates.forEach(coord => {\r\n          const lat = parseFloat(coord.latitud);\r\n          const lng = parseFloat(coord.longitud);\r\n\r\n          // Comprobar coordenadas válidas\r\n          if (!isNaN(lat) && !isNaN(lng)) {\r\n            // Crear contenido del marcador\r\n            const markerContent = document.createElement('div');\r\n            markerContent.style.background = 'white';\r\n            markerContent.style.padding = '5px';\r\n            markerContent.style.borderRadius = '5px';\r\n            markerContent.textContent = coord.nombre || 'Desconocido';\r\n\r\n            // Comprobar si AdvancedMarkerElement está definido\r\n            if (window.google.maps.marker && window.google.maps.marker.AdvancedMarkerElement) {\r\n              // Crear un nuevo marcador\r\n              const marker = new window.google.maps.marker.AdvancedMarkerElement({\r\n                position: { lat, lng },\r\n                map: map,\r\n                content: markerContent, // Usar el nodo DOM aquí\r\n              });\r\n            } else {\r\n              console.error('AdvancedMarkerElement no está definido');\r\n            }\r\n          } else {\r\n            console.error('Coordenadas inválidas:', coord);\r\n          }\r\n        });\r\n      } else {\r\n        console.error('No hay coordenadas disponibles');\r\n      }\r\n    }).catch(error => {\r\n      console.error('Error al cargar la API de Google Maps:', error);\r\n    });\r\n  }, [coordinates, loader]); // Añadir 'loader' como dependencia\r\n\r\n  return <div ref={mapRef} style={{ height: '400px', width: '100%' }} />;\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}