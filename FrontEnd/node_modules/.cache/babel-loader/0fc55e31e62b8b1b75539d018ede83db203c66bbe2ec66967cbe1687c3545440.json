{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Para redirección\nimport PersonaService from '../services/PersonaService';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Button } from 'primereact/button';\nimport Swal from 'sweetalert2'; // Para alertas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [personas, setPersonas] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    loadPersonas();\n  }, []);\n  const loadPersonas = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch('http://localhost:9001/Laboratorio1/personas', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Error al cargar personas');\n      }\n      const data = await response.json();\n      setPersonas(data);\n    } catch (error) {\n      console.error(\"Error loading personas:\", error);\n    }\n  };\n  const handleUpdate = persona => {\n    navigate('/update', {\n      state: {\n        persona\n      }\n    }); // Redirige a la página de actualización\n  };\n  const handleDelete = async id => {\n    const result = await Swal.fire({\n      title: '¿Estás seguro?',\n      text: \"No podrás revertir esto!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sí, eliminarlo!'\n    });\n    if (result.isConfirmed) {\n      const token = localStorage.getItem('token');\n      try {\n        await fetch(`http://localhost:9001/Laboratorio1/personas/${id}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        Swal.fire('Eliminado!', 'La persona ha sido eliminada.', 'success');\n        loadPersonas(); // Recarga la lista de personas\n      } catch (error) {\n        console.error(\"Error al eliminar persona:\", error);\n        Swal.fire('Error!', 'No se pudo eliminar la persona.', 'error');\n      }\n    }\n  };\n  const handleMapView = () => {\n    navigate('/map'); // Redirige a la vista del mapa\n  };\n  const actionBodyTemplate = rowData => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      label: \"Actualizar\",\n      icon: \"pi pi-pencil\",\n      onClick: () => handleUpdate(rowData),\n      className: \"p-button-warning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Eliminar\",\n      icon: \"pi pi-trash\",\n      onClick: () => handleDelete(rowData.id),\n      className: \"p-button-danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Personas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Ver Ubicaciones\",\n      onClick: handleMapView,\n      className: \"p-button-info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: personas,\n      paginator: true,\n      rows: 10,\n      header: \"Personas Registradas\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"id\",\n        header: \"ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"primerNombre\",\n        header: \"Primer Nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"segundoNombre\",\n        header: \"Segundo Nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        body: actionBodyTemplate,\n        header: \"Acciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"QSj/ayGqix0sE98I37yMxjUaIPs=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","PersonaService","DataTable","Column","Button","Swal","jsxDEV","_jsxDEV","Home","_s","personas","setPersonas","navigate","loadPersonas","token","localStorage","getItem","response","fetch","method","headers","ok","Error","data","json","error","console","handleUpdate","persona","state","handleDelete","id","result","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","handleMapView","actionBodyTemplate","rowData","Fragment","children","label","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","value","paginator","rows","header","field","body","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Para redirección\r\nimport PersonaService from '../services/PersonaService';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport Swal from 'sweetalert2'; // Para alertas\r\n\r\nconst Home = () => {\r\n    const [personas, setPersonas] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        loadPersonas();\r\n    }, []);\r\n\r\n    const loadPersonas = async () => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const response = await fetch('http://localhost:9001/Laboratorio1/personas', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Error al cargar personas');\r\n            }\r\n\r\n            const data = await response.json();\r\n            setPersonas(data);\r\n        } catch (error) {\r\n            console.error(\"Error loading personas:\", error);\r\n        }\r\n    };\r\n\r\n    const handleUpdate = (persona) => {\r\n        navigate('/update', { state: { persona } }); // Redirige a la página de actualización\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        const result = await Swal.fire({\r\n            title: '¿Estás seguro?',\r\n            text: \"No podrás revertir esto!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminarlo!'\r\n        });\r\n\r\n        if (result.isConfirmed) {\r\n            const token = localStorage.getItem('token');\r\n            try {\r\n                await fetch(`http://localhost:9001/Laboratorio1/personas/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n\r\n                Swal.fire('Eliminado!', 'La persona ha sido eliminada.', 'success');\r\n                loadPersonas(); // Recarga la lista de personas\r\n            } catch (error) {\r\n                console.error(\"Error al eliminar persona:\", error);\r\n                Swal.fire('Error!', 'No se pudo eliminar la persona.', 'error');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleMapView = () => {\r\n        navigate('/map'); // Redirige a la vista del mapa\r\n    };\r\n\r\n    const actionBodyTemplate = (rowData) => (\r\n        <React.Fragment>\r\n            <Button\r\n                label=\"Actualizar\"\r\n                icon=\"pi pi-pencil\"\r\n                onClick={() => handleUpdate(rowData)}\r\n                className=\"p-button-warning\"\r\n            />\r\n            <Button\r\n                label=\"Eliminar\"\r\n                icon=\"pi pi-trash\"\r\n                onClick={() => handleDelete(rowData.id)}\r\n                className=\"p-button-danger\"\r\n            />\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <h1>Lista de Personas</h1>\r\n            <Button label=\"Ver Ubicaciones\" onClick={handleMapView} className=\"p-button-info\" />\r\n            <DataTable value={personas} paginator rows={10} header=\"Personas Registradas\">\r\n                <Column field=\"id\" header=\"ID\"></Column>\r\n                <Column field=\"primerNombre\" header=\"Primer Nombre\"></Column>\r\n                <Column field=\"segundoNombre\" header=\"Segundo Nombre\"></Column>\r\n                <Column body={actionBodyTemplate} header=\"Acciones\"></Column>\r\n            </DataTable>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}