{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\n// src/components/MapComponent.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\n// Reemplaza con tu API Key de Google Maps\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"AIzaSyBtmSbtAkZMgopeMNzXW4NC4LyzXRLr-ck\";\nconst MapComponent = () => {\n  _s();\n  const [locations, setLocations] = useState([]);\n  const [center, setCenter] = useState({\n    lat: 4.123456,\n    lng: -74.123456\n  }); // Coordenadas iniciales del mapa\n\n  useEffect(() => {\n    // Simular la obtención de datos de una API o de una base de datos\n    const fetchLocations = async () => {\n      // Aquí deberías hacer la llamada a tu API para obtener la lista de ubicaciones\n      // Por simplicidad, se usa un conjunto de datos estáticos\n      const data = [{\n        id: 1,\n        name: 'Ubicación 1',\n        lat: 4.123,\n        lng: -74.123\n      }, {\n        id: 2,\n        name: 'Ubicación 2',\n        lat: 4.124,\n        lng: -74.124\n      }, {\n        id: 3,\n        name: 'Ubicación 3',\n        lat: 4.125,\n        lng: -74.125\n      }];\n      setLocations(data);\n    };\n    fetchLocations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: API_KEY,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        height: \"400px\",\n        width: \"100%\"\n      },\n      center: center,\n      zoom: 12,\n      children: locations.map(location => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: location.lat,\n          lng: location.lng\n        },\n        title: location.name\n      }, location.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(MapComponent, \"/FkwCy5+msc98+gyAjdaHn630Uk=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","API_KEY","MapComponent","_s","locations","setLocations","center","setCenter","lat","lng","fetchLocations","data","id","name","googleMapsApiKey","children","mapContainerStyle","height","width","zoom","map","location","position","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/MapComponent.jsx"],"sourcesContent":["// src/components/MapComponent.jsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n\r\n// Reemplaza con tu API Key de Google Maps\r\nconst API_KEY = \"AIzaSyBtmSbtAkZMgopeMNzXW4NC4LyzXRLr-ck\";\r\n\r\nconst MapComponent = () => {\r\n    const [locations, setLocations] = useState([]);\r\n    const [center, setCenter] = useState({ lat: 4.123456, lng: -74.123456 }); // Coordenadas iniciales del mapa\r\n\r\n    useEffect(() => {\r\n        // Simular la obtención de datos de una API o de una base de datos\r\n        const fetchLocations = async () => {\r\n            // Aquí deberías hacer la llamada a tu API para obtener la lista de ubicaciones\r\n            // Por simplicidad, se usa un conjunto de datos estáticos\r\n            const data = [\r\n                { id: 1, name: 'Ubicación 1', lat: 4.123, lng: -74.123 },\r\n                { id: 2, name: 'Ubicación 2', lat: 4.124, lng: -74.124 },\r\n                { id: 3, name: 'Ubicación 3', lat: 4.125, lng: -74.125 },\r\n            ];\r\n            setLocations(data);\r\n        };\r\n\r\n        fetchLocations();\r\n    }, []);\r\n\r\n    return (\r\n        <LoadScript googleMapsApiKey={API_KEY}>\r\n            <GoogleMap\r\n                mapContainerStyle={{ height: \"400px\", width: \"100%\" }}\r\n                center={center}\r\n                zoom={12}\r\n            >\r\n                {locations.map(location => (\r\n                    <Marker\r\n                        key={location.id}\r\n                        position={{ lat: location.lat, lng: location.lng }}\r\n                        title={location.name}\r\n                    />\r\n                ))}\r\n            </GoogleMap>\r\n        </LoadScript>\r\n    );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;;AAEtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,yCAAyC;AAEzD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,GAAG,EAAE,QAAQ;IAAEC,GAAG,EAAE,CAAC;EAAU,CAAC,CAAC,CAAC,CAAC;;EAE1Ef,SAAS,CAAC,MAAM;IACZ;IACA,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B;MACA;MACA,MAAMC,IAAI,GAAG,CACT;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,aAAa;QAAEL,GAAG,EAAE,KAAK;QAAEC,GAAG,EAAE,CAAC;MAAO,CAAC,EACxD;QAAEG,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,aAAa;QAAEL,GAAG,EAAE,KAAK;QAAEC,GAAG,EAAE,CAAC;MAAO,CAAC,EACxD;QAAEG,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,aAAa;QAAEL,GAAG,EAAE,KAAK;QAAEC,GAAG,EAAE,CAAC;MAAO,CAAC,CAC3D;MACDJ,YAAY,CAACM,IAAI,CAAC;IACtB,CAAC;IAEDD,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA,CAACH,UAAU;IAACiB,gBAAgB,EAAEb,OAAQ;IAAAc,QAAA,eAClCf,OAAA,CAACJ,SAAS;MACNoB,iBAAiB,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MACtDZ,MAAM,EAAEA,MAAO;MACfa,IAAI,EAAE,EAAG;MAAAJ,QAAA,EAERX,SAAS,CAACgB,GAAG,CAACC,QAAQ,iBACnBrB,OAAA,CAACF,MAAM;QAEHwB,QAAQ,EAAE;UAAEd,GAAG,EAAEa,QAAQ,CAACb,GAAG;UAAEC,GAAG,EAAEY,QAAQ,CAACZ;QAAI,CAAE;QACnDc,KAAK,EAAEF,QAAQ,CAACR;MAAK,GAFhBQ,QAAQ,CAACT,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGnB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAErB,CAAC;AAACxB,EAAA,CArCID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}