{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [apiKey, setApiKey] = useState(''); // Para almacenar la API Key temporalmente\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Si el API Key ya está almacenado en localStorage, úsalo\n    const storedApiKey = localStorage.getItem('apikey');\n\n    // Si el API Key no está en localStorage, lo solicitamos al backend\n    if (!storedApiKey) {\n      try {\n        const response = await axios.get('http://localhost:9001/apiKey'); // Cambia esta URL si es necesario\n        setApiKey(response.data.apikey); // Suponiendo que el backend devuelve { apikey: '...' }\n        localStorage.setItem('apikey', response.data.apikey); // Almacenamos el API Key\n      } catch (error) {\n        console.error('Error al obtener la API Key:', error);\n        return;\n      }\n    } else {\n      setApiKey(storedApiKey);\n    }\n\n    // Ahora hacemos la solicitud de autenticación\n    const authData = {\n      username,\n      password\n    };\n    try {\n      const response = await axios.post('http://localhost:9001/authenticate', authData, {\n        headers: {\n          'apikey': apiKey || storedApiKey // Asegúrate de pasar el API Key correcto\n        }\n      });\n      console.log('Token JWT:', response.data.token);\n      // Aquí puedes almacenar el token en localStorage o en el estado de tu aplicación\n    } catch (error) {\n      console.error('Error en la autenticación:', error.response);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          autoComplete: \"current-password\" // Sugerido para accesibilidad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"AnXHOfyS6bJ3uwef4MitQMrgK1Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","apiKey","setApiKey","handleSubmit","event","preventDefault","storedApiKey","localStorage","getItem","response","get","data","apikey","setItem","error","console","authData","post","headers","log","token","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","required","autoComplete","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [apiKey, setApiKey] = useState(''); // Para almacenar la API Key temporalmente\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Si el API Key ya está almacenado en localStorage, úsalo\r\n        const storedApiKey = localStorage.getItem('apikey');\r\n\r\n        // Si el API Key no está en localStorage, lo solicitamos al backend\r\n        if (!storedApiKey) {\r\n            try {\r\n                const response = await axios.get('http://localhost:9001/apiKey'); // Cambia esta URL si es necesario\r\n                setApiKey(response.data.apikey); // Suponiendo que el backend devuelve { apikey: '...' }\r\n                localStorage.setItem('apikey', response.data.apikey); // Almacenamos el API Key\r\n            } catch (error) {\r\n                console.error('Error al obtener la API Key:', error);\r\n                return;\r\n            }\r\n        } else {\r\n            setApiKey(storedApiKey);\r\n        }\r\n\r\n        // Ahora hacemos la solicitud de autenticación\r\n        const authData = {\r\n            username,\r\n            password,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:9001/authenticate', authData, {\r\n                headers: {\r\n                    'apikey': apiKey || storedApiKey, // Asegúrate de pasar el API Key correcto\r\n                },\r\n            });\r\n            console.log('Token JWT:', response.data.token);\r\n            // Aquí puedes almacenar el token en localStorage o en el estado de tu aplicación\r\n        } catch (error) {\r\n            console.error('Error en la autenticación:', error.response);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                        autoComplete=\"current-password\" // Sugerido para accesibilidad\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}