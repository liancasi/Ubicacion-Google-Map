{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [coordenadas, setCoordenadas] = useState([]);\n  useEffect(() => {\n    // Cargar la API de Google Maps\n    const loader = new Loader({\n      apiKey: 'YOUR_GOOGLE_MAPS_API_KEY',\n      // Reemplaza con tu clave API válida\n      version: 'weekly',\n      libraries: ['places']\n    });\n    loader.load().then(() => {\n      if (window.google) {\n        const mapOptions = {\n          center: {\n            lat: 4.60971,\n            lng: -74.08175\n          },\n          // Coordenadas de ejemplo\n          zoom: 8\n        };\n        const mapInstance = new window.google.maps.Map(document.getElementById('map'), mapOptions);\n        setMap(mapInstance);\n\n        // Llamada al backend para obtener las coordenadas\n        fetch('http://localhost:9001/Laboratorio1/coordenadas').then(response => response.json()).then(data => {\n          setCoordenadas(data);\n        }).catch(error => console.error('Error fetching coordenadas:', error));\n      }\n    });\n  }, []);\n\n  // Añadir los AdvancedMarkerElements una vez que las coordenadas estén disponibles\n  useEffect(() => {\n    if (map && coordenadas.length > 0) {\n      coordenadas.forEach(coord => {\n        const marker = new window.google.maps.marker.AdvancedMarkerElement({\n          map,\n          position: {\n            lat: coord.latitud,\n            lng: coord.longitud\n          },\n          title: 'Persona registrada'\n        });\n      });\n    }\n  }, [map, coordenadas]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '500px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"IouC5lsloVeJQU2F801T8rUA59g=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","Loader","jsxDEV","_jsxDEV","MapComponent","_s","map","setMap","coordenadas","setCoordenadas","loader","apiKey","version","libraries","load","then","window","google","mapOptions","center","lat","lng","zoom","mapInstance","maps","Map","document","getElementById","fetch","response","json","data","catch","error","console","length","forEach","coord","marker","AdvancedMarkerElement","position","latitud","longitud","title","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\n\r\nconst MapComponent = () => {\r\n  const [map, setMap] = useState(null);\r\n  const [coordenadas, setCoordenadas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Cargar la API de Google Maps\r\n    const loader = new Loader({\r\n      apiKey: 'YOUR_GOOGLE_MAPS_API_KEY', // Reemplaza con tu clave API válida\r\n      version: 'weekly',\r\n      libraries: ['places'],\r\n    });\r\n\r\n    loader.load().then(() => {\r\n      if (window.google) {\r\n        const mapOptions = {\r\n          center: { lat: 4.60971, lng: -74.08175 }, // Coordenadas de ejemplo\r\n          zoom: 8,\r\n        };\r\n        const mapInstance = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n        setMap(mapInstance);\r\n\r\n        // Llamada al backend para obtener las coordenadas\r\n        fetch('http://localhost:9001/Laboratorio1/coordenadas')\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setCoordenadas(data);\r\n          })\r\n          .catch((error) => console.error('Error fetching coordenadas:', error));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Añadir los AdvancedMarkerElements una vez que las coordenadas estén disponibles\r\n  useEffect(() => {\r\n    if (map && coordenadas.length > 0) {\r\n      coordenadas.forEach((coord) => {\r\n        const marker = new window.google.maps.marker.AdvancedMarkerElement({\r\n          map,\r\n          position: { lat: coord.latitud, lng: coord.longitud },\r\n          title: 'Persona registrada',\r\n        });\r\n      });\r\n    }\r\n  }, [map, coordenadas]);\r\n\r\n  return <div id=\"map\" style={{ height: '500px', width: '100%' }} />;\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,MAAM,GAAG,IAAIT,MAAM,CAAC;MACxBU,MAAM,EAAE,0BAA0B;MAAE;MACpCC,OAAO,EAAE,QAAQ;MACjBC,SAAS,EAAE,CAAC,QAAQ;IACtB,CAAC,CAAC;IAEFH,MAAM,CAACI,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACvB,IAAIC,MAAM,CAACC,MAAM,EAAE;QACjB,MAAMC,UAAU,GAAG;UACjBC,MAAM,EAAE;YAAEC,GAAG,EAAE,OAAO;YAAEC,GAAG,EAAE,CAAC;UAAS,CAAC;UAAE;UAC1CC,IAAI,EAAE;QACR,CAAC;QACD,MAAMC,WAAW,GAAG,IAAIP,MAAM,CAACC,MAAM,CAACO,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAET,UAAU,CAAC;QAC1FX,MAAM,CAACgB,WAAW,CAAC;;QAEnB;QACAK,KAAK,CAAC,gDAAgD,CAAC,CACpDb,IAAI,CAAEc,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCf,IAAI,CAAEgB,IAAI,IAAK;UACdtB,cAAc,CAACsB,IAAI,CAAC;QACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC,CAAC;MAC1E;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAlC,SAAS,CAAC,MAAM;IACd,IAAIO,GAAG,IAAIE,WAAW,CAAC2B,MAAM,GAAG,CAAC,EAAE;MACjC3B,WAAW,CAAC4B,OAAO,CAAEC,KAAK,IAAK;QAC7B,MAAMC,MAAM,GAAG,IAAItB,MAAM,CAACC,MAAM,CAACO,IAAI,CAACc,MAAM,CAACC,qBAAqB,CAAC;UACjEjC,GAAG;UACHkC,QAAQ,EAAE;YAAEpB,GAAG,EAAEiB,KAAK,CAACI,OAAO;YAAEpB,GAAG,EAAEgB,KAAK,CAACK;UAAS,CAAC;UACrDC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACrC,GAAG,EAAEE,WAAW,CAAC,CAAC;EAEtB,oBAAOL,OAAA;IAAKyC,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpE,CAAC;AAAC9C,EAAA,CA9CID,YAAY;AAAAgD,EAAA,GAAZhD,YAAY;AAgDlB,eAAeA,YAAY;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}