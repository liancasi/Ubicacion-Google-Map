{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    // Lógica para autenticar al usuario\n\n    // Suponiendo que la autenticación fue exitosa, ahora llamamos a fetchApiKey\n    await fetchApiKey(username);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Username\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nconst fetchApiKey = async username => {\n  try {\n    const response = await fetch('http://localhost:9001/apiKey', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'username': username\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Error al obtener la API Key');\n    }\n    const data = await response.json();\n    console.log('API Key:', data.apiKey);\n    // Aquí puedes almacenar la API Key en el contexto o estado según lo necesites\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","handleLogin","e","preventDefault","fetchApiKey","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","response","fetch","method","headers","ok","Error","data","json","console","log","apiKey","error","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        // Lógica para autenticar al usuario\r\n\r\n        // Suponiendo que la autenticación fue exitosa, ahora llamamos a fetchApiKey\r\n        await fetchApiKey(username);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleLogin}>\r\n            <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Username\"\r\n                required\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n                required\r\n            />\r\n            <button type=\"submit\">Login</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst fetchApiKey = async (username) => {\r\n    try {\r\n        const response = await fetch('http://localhost:9001/apiKey', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'username': username,\r\n            },\r\n        });\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Error al obtener la API Key');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('API Key:', data.apiKey);\r\n        // Aquí puedes almacenar la API Key en el contexto o estado según lo necesites\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n    }\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;;IAEA;IACA,MAAMC,WAAW,CAACP,QAAQ,CAAC;EAC/B,CAAC;EAED,oBACIH,OAAA;IAAMW,QAAQ,EAAEJ,WAAY;IAAAK,QAAA,gBACxBZ,OAAA;MACIa,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEX,QAAS;MAChBY,QAAQ,EAAGP,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC,UAAU;MACtBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFtB,OAAA;MACIa,IAAI,EAAC,UAAU;MACfC,KAAK,EAAET,QAAS;MAChBU,QAAQ,EAAGP,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC,UAAU;MACtBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFtB,OAAA;MAAQa,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEf,CAAC;AAACpB,EAAA,CA/BID,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAiCX,MAAMS,WAAW,GAAG,MAAOP,QAAQ,IAAK;EACpC,IAAI;IACA,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACzDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,UAAU,EAAExB;MAChB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACqB,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,IAAI,CAACI,MAAM,CAAC;IACpC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC;AACJ,CAAC;AAED,eAAelC,KAAK;AAAC,IAAAsB,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}