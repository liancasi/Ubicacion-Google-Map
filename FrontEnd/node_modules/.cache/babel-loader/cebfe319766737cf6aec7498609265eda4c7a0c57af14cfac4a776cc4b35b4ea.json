{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapaComponent = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const bearer = \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJqdGkiOiJQUE9PSUlfSldUIiwic3ViIjoibGl6ZXRoY2FybyIsImF1dGhvcml0aWVzIjpbIlJPTEVfVVNFUiJdLCJpYXQiOjE3MjkwMzI3OTksImV4cCI6MTcyOTg5Njc5OX0.Pj_yzfPn93juG6hb17fMMwBcwt62uWPfFCbzUiIfUw2drxv3EbgWAcIf8AMLrkeuhxtMhUtJYx_KIg4O_Lf7cA\";\n\n  // Función para obtener las coordenadas\n  const fetchCoordenadas = async () => {\n    const response = await fetch('http://localhost:9001/Laboratorio1/coordenadas', {\n      method: 'GET',\n      headers: {\n        'Authorization': bearer,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok: ' + response.statusText);\n    }\n    return response.json();\n  };\n\n  // Inicializa el mapa y añade marcadores\n  const initMap = () => {\n    const initialLocation = {\n      lat: 4.4279668,\n      lng: -75.21346609999999\n    };\n    const newMap = new window.google.maps.Map(document.getElementById(\"map\"), {\n      zoom: 14,\n      center: initialLocation\n    });\n    setMap(newMap);\n\n    // Obtener coordenadas y añadir marcadores\n    fetchCoordenadas().then(json => {\n      json.forEach(coord => {\n        addMarker({\n          lat: coord.latitud,\n          lng: coord.longitud\n        }, newMap, coord.marca);\n      });\n    }).catch(error => {\n      console.error('Error loading coordinates:', error);\n    });\n  };\n\n  // Añadir marcador al mapa\n  const addMarker = (location, map, label) => {\n    new window.google.maps.Marker({\n      position: location,\n      title: label,\n      map: map\n    });\n  };\n\n  // Cargar el script de Google Maps\n  useEffect(() => {\n    const loadGoogleMapsScript = () => {\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBomnY9UemevV5IVEXtYHP6SWw3kRsERGc&callback=initMap&libraries=places`;\n      script.async = true;\n      script.defer = true;\n      document.body.appendChild(script);\n    };\n    if (!window.google) {\n      window.initMap = initMap;\n      loadGoogleMapsScript();\n    } else {\n      initMap();\n    }\n    return () => {\n      const script = document.querySelector('script[src^=\"https://maps.googleapis.com/maps/api/js\"]');\n      if (script) {\n        document.body.removeChild(script);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '100vh',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(MapaComponent, \"4bJBv0PO2rrDzFRchWWuXyIru0A=\");\n_c = MapaComponent;\nexport default MapaComponent;\nvar _c;\n$RefreshReg$(_c, \"MapaComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MapaComponent","_s","map","setMap","bearer","fetchCoordenadas","response","fetch","method","headers","ok","Error","statusText","json","initMap","initialLocation","lat","lng","newMap","window","google","maps","Map","document","getElementById","zoom","center","then","forEach","coord","addMarker","latitud","longitud","marca","catch","error","console","location","label","Marker","position","title","loadGoogleMapsScript","script","createElement","src","async","defer","body","appendChild","querySelector","removeChild","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst MapaComponent = () => {\r\n  const [map, setMap] = useState(null);\r\n\r\n  const bearer = \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJqdGkiOiJQUE9PSUlfSldUIiwic3ViIjoibGl6ZXRoY2FybyIsImF1dGhvcml0aWVzIjpbIlJPTEVfVVNFUiJdLCJpYXQiOjE3MjkwMzI3OTksImV4cCI6MTcyOTg5Njc5OX0.Pj_yzfPn93juG6hb17fMMwBcwt62uWPfFCbzUiIfUw2drxv3EbgWAcIf8AMLrkeuhxtMhUtJYx_KIg4O_Lf7cA\";\r\n\r\n  // Función para obtener las coordenadas\r\n  const fetchCoordenadas = async () => {\r\n    const response = await fetch('http://localhost:9001/Laboratorio1/coordenadas', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': bearer,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok: ' + response.statusText);\r\n    }\r\n\r\n    return response.json();\r\n  };\r\n\r\n  // Inicializa el mapa y añade marcadores\r\n  const initMap = () => {\r\n    const initialLocation = { lat: 4.4279668, lng: -75.21346609999999 };\r\n    const newMap = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n      zoom: 14,\r\n      center: initialLocation,\r\n    });\r\n    setMap(newMap);\r\n\r\n    // Obtener coordenadas y añadir marcadores\r\n    fetchCoordenadas()\r\n      .then(json => {\r\n        json.forEach(coord => {\r\n          addMarker({ lat: coord.latitud, lng: coord.longitud }, newMap, coord.marca);\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error('Error loading coordinates:', error);\r\n      });\r\n  };\r\n\r\n  // Añadir marcador al mapa\r\n  const addMarker = (location, map, label) => {\r\n    new window.google.maps.Marker({\r\n      position: location,\r\n      title: label,\r\n      map: map,\r\n    });\r\n  };\r\n\r\n  // Cargar el script de Google Maps\r\n  useEffect(() => {\r\n    const loadGoogleMapsScript = () => {\r\n      const script = document.createElement('script');\r\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBomnY9UemevV5IVEXtYHP6SWw3kRsERGc&callback=initMap&libraries=places`;\r\n      script.async = true;\r\n      script.defer = true;\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!window.google) {\r\n      window.initMap = initMap;\r\n      loadGoogleMapsScript();\r\n    } else {\r\n      initMap();\r\n    }\r\n\r\n    return () => {\r\n      const script = document.querySelector('script[src^=\"https://maps.googleapis.com/maps/api/js\"]');\r\n      if (script) {\r\n        document.body.removeChild(script);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"map\" style={{ height: '100vh', width: '100%' }}></div>\r\n  );\r\n};\r\n\r\nexport default MapaComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAMO,MAAM,GAAG,4PAA4P;;EAE3Q;EACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;MAC7EC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAEL,MAAM;QACvB,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACE,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,GAAGL,QAAQ,CAACM,UAAU,CAAC;IACxE;IAEA,OAAON,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;;EAED;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,eAAe,GAAG;MAAEC,GAAG,EAAE,SAAS;MAAEC,GAAG,EAAE,CAAC;IAAkB,CAAC;IACnE,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;MACxEC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAEX;IACV,CAAC,CAAC;IACFZ,MAAM,CAACe,MAAM,CAAC;;IAEd;IACAb,gBAAgB,CAAC,CAAC,CACfsB,IAAI,CAACd,IAAI,IAAI;MACZA,IAAI,CAACe,OAAO,CAACC,KAAK,IAAI;QACpBC,SAAS,CAAC;UAAEd,GAAG,EAAEa,KAAK,CAACE,OAAO;UAAEd,GAAG,EAAEY,KAAK,CAACG;QAAS,CAAC,EAAEd,MAAM,EAAEW,KAAK,CAACI,KAAK,CAAC;MAC7E,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAML,SAAS,GAAGA,CAACO,QAAQ,EAAEnC,GAAG,EAAEoC,KAAK,KAAK;IAC1C,IAAInB,MAAM,CAACC,MAAM,CAACC,IAAI,CAACkB,MAAM,CAAC;MAC5BC,QAAQ,EAAEH,QAAQ;MAClBI,KAAK,EAAEH,KAAK;MACZpC,GAAG,EAAEA;IACP,CAAC,CAAC;EACJ,CAAC;;EAED;EACAN,SAAS,CAAC,MAAM;IACd,MAAM8C,oBAAoB,GAAGA,CAAA,KAAM;MACjC,MAAMC,MAAM,GAAGpB,QAAQ,CAACqB,aAAa,CAAC,QAAQ,CAAC;MAC/CD,MAAM,CAACE,GAAG,GAAG,uHAAuH;MACpIF,MAAM,CAACG,KAAK,GAAG,IAAI;MACnBH,MAAM,CAACI,KAAK,GAAG,IAAI;MACnBxB,QAAQ,CAACyB,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;IACnC,CAAC;IAED,IAAI,CAACxB,MAAM,CAACC,MAAM,EAAE;MAClBD,MAAM,CAACL,OAAO,GAAGA,OAAO;MACxB4B,oBAAoB,CAAC,CAAC;IACxB,CAAC,MAAM;MACL5B,OAAO,CAAC,CAAC;IACX;IAEA,OAAO,MAAM;MACX,MAAM6B,MAAM,GAAGpB,QAAQ,CAAC2B,aAAa,CAAC,wDAAwD,CAAC;MAC/F,IAAIP,MAAM,EAAE;QACVpB,QAAQ,CAACyB,IAAI,CAACG,WAAW,CAACR,MAAM,CAAC;MACnC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE5C,OAAA;IAAKqD,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEnE,CAAC;AAAC1D,EAAA,CAhFID,aAAa;AAAA4D,EAAA,GAAb5D,aAAa;AAkFnB,eAAeA,aAAa;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}