{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:9001/Laboratorio1/usuario'; // Reemplaza con la URL de tu API\n\nconst UsuarioService = {\n  // Método para cambiar la contraseña\n  changePassword: async (userId, data, token) => {\n    try {\n      const response = await axios.put(`${API_URL}/users/${userId}/change-password`,\n      // Endpoint para cambiar la contraseña\n      data, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          // Añadir el token de autenticación\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data; // Retornar los datos de la respuesta\n    } catch (error) {\n      console.error(\"Error en la solicitud de cambio de contraseña:\", error);\n      throw error; // Lanzar el error para manejarlo en el componente\n    }\n  }\n\n  // Puedes añadir más métodos relacionados con el usuario aquí\n  // Ejemplo: obtener usuario, actualizar usuario, eliminar usuario, etc.\n};\nexport default UsuarioService;","map":{"version":3,"names":["axios","API_URL","UsuarioService","changePassword","userId","data","token","response","put","headers","Authorization","error","console"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/services/UsuarioService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:9001/Laboratorio1/usuario'; // Reemplaza con la URL de tu API\r\n\r\nconst UsuarioService = {\r\n    // Método para cambiar la contraseña\r\n    changePassword: async (userId, data, token) => {\r\n        try {\r\n            const response = await axios.put(\r\n                `${API_URL}/users/${userId}/change-password`, // Endpoint para cambiar la contraseña\r\n                data,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`, // Añadir el token de autenticación\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n            return response.data; // Retornar los datos de la respuesta\r\n        } catch (error) {\r\n            console.error(\"Error en la solicitud de cambio de contraseña:\", error);\r\n            throw error; // Lanzar el error para manejarlo en el componente\r\n        }\r\n    },\r\n\r\n    // Puedes añadir más métodos relacionados con el usuario aquí\r\n    // Ejemplo: obtener usuario, actualizar usuario, eliminar usuario, etc.\r\n};\r\n\r\nexport default UsuarioService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4CAA4C,CAAC,CAAC;;AAE9D,MAAMC,cAAc,GAAG;EACnB;EACAC,cAAc,EAAE,MAAAA,CAAOC,MAAM,EAAEC,IAAI,EAAEC,KAAK,KAAK;IAC3C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAC5B,GAAGP,OAAO,UAAUG,MAAM,kBAAkB;MAAE;MAC9CC,IAAI,EACJ;QACII,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUJ,KAAK,EAAE;UAAE;UAClC,cAAc,EAAE;QACpB;MACJ,CACJ,CAAC;MACD,OAAOC,QAAQ,CAACF,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;MACtE,MAAMA,KAAK,CAAC,CAAC;IACjB;EACJ;;EAEA;EACA;AACJ,CAAC;AAED,eAAeT,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}