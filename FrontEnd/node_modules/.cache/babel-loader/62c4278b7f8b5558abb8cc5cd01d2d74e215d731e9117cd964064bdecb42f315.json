{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport CoordenadasService from '../services/CoordenadasService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const fetchCoordenadas = async () => {\n    try {\n      const coordenadas = await CoordenadasService.getCoordenadas();\n      console.log('Coordenadas recibidas:', coordenadas); // Verifica aquí\n\n      // Asegúrate de que las coordenadas sean correctas\n      const markersData = coordenadas.map(coord => ({\n        id: coord.id,\n        marca: coord.marca,\n        lat: parseFloat(coord.latitud),\n        // Cambiar a latitud\n        lng: parseFloat(coord.longitud) // Cambiar a longitud\n      }));\n      console.log('Marcadores actuales:', markersData); // Comprueba los marcadores antes de establecer el estado\n      setMarkers(markersData);\n    } catch (error) {\n      console.error('Error fetching coordinates:', error);\n    }\n  };\n  useEffect(() => {\n    fetchCoordenadas();\n  }, []);\n  const handleMarkerClick = marker => {\n    console.log('Marcador seleccionado:', marker); // Verifica que se esté seleccionando el marcador\n    setSelectedMarker(marker);\n  };\n  const handleCloseInfoWindow = () => {\n    setSelectedMarker(null);\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBomnY9UemevV5IVEXtYHP6SWw3kRsERGc\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        height: '400px',\n        width: '800px'\n      },\n      center: {\n        lat: 4.610,\n        lng: -74.083\n      } // Ajusta al centro deseado\n      ,\n      zoom: 6,\n      children: [markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        title: marker.marca,\n        onClick: () => handleMarkerClick(marker)\n      }, marker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selectedMarker.lat,\n          lng: selectedMarker.lng\n        },\n        onCloseClick: handleCloseInfoWindow,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: selectedMarker.marca\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"eDRCfxU+C0DNDXJJ3kttqUgLtk4=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","InfoWindow","CoordenadasService","jsxDEV","_jsxDEV","MapComponent","_s","markers","setMarkers","selectedMarker","setSelectedMarker","fetchCoordenadas","coordenadas","getCoordenadas","console","log","markersData","map","coord","id","marca","lat","parseFloat","latitud","lng","longitud","error","handleMarkerClick","marker","handleCloseInfoWindow","googleMapsApiKey","children","mapContainerStyle","height","width","center","zoom","position","title","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onCloseClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport CoordenadasService from '../services/CoordenadasService';\r\n\r\nconst MapComponent = () => {\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n\r\n  const fetchCoordenadas = async () => {\r\n    try {\r\n      const coordenadas = await CoordenadasService.getCoordenadas();\r\n      console.log('Coordenadas recibidas:', coordenadas); // Verifica aquí\r\n\r\n      // Asegúrate de que las coordenadas sean correctas\r\n      const markersData = coordenadas.map(coord => ({\r\n        id: coord.id,\r\n        marca: coord.marca,\r\n        lat: parseFloat(coord.latitud), // Cambiar a latitud\r\n        lng: parseFloat(coord.longitud), // Cambiar a longitud\r\n      }));\r\n\r\n      console.log('Marcadores actuales:', markersData); // Comprueba los marcadores antes de establecer el estado\r\n      setMarkers(markersData);\r\n    } catch (error) {\r\n      console.error('Error fetching coordinates:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCoordenadas();\r\n  }, []);\r\n\r\n  const handleMarkerClick = (marker) => {\r\n    console.log('Marcador seleccionado:', marker); // Verifica que se esté seleccionando el marcador\r\n    setSelectedMarker(marker);\r\n  };\r\n\r\n  const handleCloseInfoWindow = () => {\r\n    setSelectedMarker(null);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyBomnY9UemevV5IVEXtYHP6SWw3kRsERGc\">\r\n      <GoogleMap\r\n        mapContainerStyle={{ height: '400px', width: '800px' }}\r\n        center={{ lat: 4.610, lng: -74.083 }} // Ajusta al centro deseado\r\n        zoom={6}\r\n      >\r\n        {markers.map(marker => (\r\n          <Marker \r\n            key={marker.id} \r\n            position={{ lat: marker.lat, lng: marker.lng }} \r\n            title={marker.marca}\r\n            onClick={() => handleMarkerClick(marker)}\r\n          />\r\n        ))}\r\n\r\n        {selectedMarker && (\r\n          <InfoWindow\r\n            position={{ lat: selectedMarker.lat, lng: selectedMarker.lng }}\r\n            onCloseClick={handleCloseInfoWindow}\r\n          >\r\n            <div>\r\n              <h4>{selectedMarker.marca}</h4>\r\n              {/* Aquí puedes añadir más información de la persona */}\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}