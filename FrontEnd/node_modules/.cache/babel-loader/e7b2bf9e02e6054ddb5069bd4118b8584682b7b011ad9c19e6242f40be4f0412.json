{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\n/* global google */\n\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst center = {\n  lat: 4.6109,\n  // Coordenadas de ejemplo para Ibagué, Tolima\n  lng: -75.5000\n};\nconst MapComponent = () => {\n  _s();\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [locations, setLocations] = useState([]);\n  useEffect(() => {\n    const initializeMap = () => {\n      setMapLoaded(true);\n    };\n    window.initializeMap = initializeMap;\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBomnY9UemevV5IVEXtYHP6SWw3kRsERGc&callback=initializeMap`;\n    script.async = true;\n    script.defer = true;\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n      delete window.initializeMap;\n    };\n  }, []);\n  useEffect(() => {\n    // Función para obtener las ubicaciones desde el backend\n    const fetchLocations = async () => {\n      try {\n        const response = await fetch('http://localhost:9001/Laboratorio1/coordenadas'); // Cambia la URL según tu API\n        const data = await response.json();\n        setLocations(data); // Suponiendo que data es un array de objetos con lat y lng\n      } catch (error) {\n        console.error('Error fetching locations:', error);\n      }\n    };\n    fetchLocations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBomnY9UemevV5IVEXtYHP6SWw3kRsERGc\",\n    children: mapLoaded && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      children: locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: location.lat,\n          lng: location.lng\n        } // Asegúrate de que tus objetos tengan lat y lng\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"c/tKV/yrDw0G5dpnrhco8NZbfTM=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MapComponent","_s","mapLoaded","setMapLoaded","locations","setLocations","initializeMap","window","script","document","createElement","src","async","defer","body","appendChild","removeChild","fetchLocations","response","fetch","data","json","error","console","googleMapsApiKey","children","mapContainerStyle","zoom","map","location","index","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/MapComponent.jsx"],"sourcesContent":["/* global google */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px',\r\n};\r\n\r\nconst center = {\r\n  lat: 4.6109, // Coordenadas de ejemplo para Ibagué, Tolima\r\n  lng: -75.5000,\r\n};\r\n\r\nconst MapComponent = () => {\r\n  const [mapLoaded, setMapLoaded] = useState(false);\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const initializeMap = () => {\r\n      setMapLoaded(true);\r\n    };\r\n\r\n    window.initializeMap = initializeMap;\r\n\r\n    const script = document.createElement('script');\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBomnY9UemevV5IVEXtYHP6SWw3kRsERGc&callback=initializeMap`;\r\n    script.async = true;\r\n    script.defer = true;\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n      delete window.initializeMap;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Función para obtener las ubicaciones desde el backend\r\n    const fetchLocations = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:9001/Laboratorio1/coordenadas'); // Cambia la URL según tu API\r\n        const data = await response.json();\r\n        setLocations(data); // Suponiendo que data es un array de objetos con lat y lng\r\n      } catch (error) {\r\n        console.error('Error fetching locations:', error);\r\n      }\r\n    };\r\n\r\n    fetchLocations();\r\n  }, []);\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyBomnY9UemevV5IVEXtYHP6SWw3kRsERGc\">\r\n      {mapLoaded && (\r\n        <GoogleMap\r\n          mapContainerStyle={containerStyle}\r\n          center={center}\r\n          zoom={10}\r\n        >\r\n          {locations.map((location, index) => (\r\n            <Marker \r\n              key={index} \r\n              position={{ lat: location.lat, lng: location.lng }} // Asegúrate de que tus objetos tengan lat y lng\r\n            />\r\n          ))}\r\n        </GoogleMap>\r\n      )}\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,MAAM;EAAE;EACbC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMmB,aAAa,GAAGA,CAAA,KAAM;MAC1BH,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC;IAEDI,MAAM,CAACD,aAAa,GAAGA,aAAa;IAEpC,MAAME,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,4GAA4G;IACzHH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBJ,MAAM,CAACK,KAAK,GAAG,IAAI;IACnBJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;IAEjC,OAAO,MAAM;MACXC,QAAQ,CAACK,IAAI,CAACE,WAAW,CAACR,MAAM,CAAC;MACjC,OAAOD,MAAM,CAACD,aAAa;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACd;IACA,MAAM8B,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAC;QAChF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClChB,YAAY,CAACe,IAAI,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA,CAACH,UAAU;IAACkC,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,EACnEvB,SAAS,iBACRT,OAAA,CAACJ,SAAS;MACRqC,iBAAiB,EAAEhC,cAAe;MAClCG,MAAM,EAAEA,MAAO;MACf8B,IAAI,EAAE,EAAG;MAAAF,QAAA,EAERrB,SAAS,CAACwB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7BrC,OAAA,CAACF,MAAM;QAELwC,QAAQ,EAAE;UAAEjC,GAAG,EAAE+B,QAAQ,CAAC/B,GAAG;UAAEC,GAAG,EAAE8B,QAAQ,CAAC9B;QAAI,CAAE,CAAC;MAAA,GAD/C+B,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EACZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEjB,CAAC;AAAClC,EAAA,CAxDID,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AA0DlB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}