{"ast":null,"code":"import axios from 'axios';\n\n// Define your API URL here (you can replace it with your actual API base URL)\nconst API_URL = 'http://localhost:9001/Laboratorio1';\nconst AuthService = {\n  authenticate: async (username, password) => {\n    try {\n      // Primero autentica al usuario\n      const authResponse = await axios.post(`${API_URL}/authenticate`, {\n        username,\n        password\n      });\n      if (authResponse.data && authResponse.data.token) {\n        // Obtiene la API Key usando el nombre de usuario\n        const apiKeyResponse = await axios.get(`${API_URL}/apiKey`, {\n          headers: {\n            username: username // Envía el username en el header\n          }\n        });\n        const apiKey = apiKeyResponse.data.apiKey;\n\n        // Ahora realiza otra solicitud que requiere el apikey\n        const secureResponse = await axios.get(`${API_URL}/someSecureEndpoint`, {\n          headers: {\n            apikey: apiKey // Incluye el apikey en los encabezados\n          }\n        });\n        return {\n          token: authResponse.data.token,\n          apikey: apiKey,\n          // Guarda la API Key de la respuesta\n          secureData: secureResponse.data // Si necesitas datos seguros\n        };\n      } else {\n        throw new Error('No se pudo autenticar al usuario');\n      }\n    } catch (error) {\n      console.error('Error en la autenticación', error);\n      throw error; // Propaga el error para manejarlo en el componente\n    }\n  }\n};\nexport default AuthService;","map":{"version":3,"names":["axios","API_URL","AuthService","authenticate","username","password","authResponse","post","data","token","apiKeyResponse","get","headers","apiKey","secureResponse","apikey","secureData","Error","error","console"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/services/AuthService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Define your API URL here (you can replace it with your actual API base URL)\r\nconst API_URL = 'http://localhost:9001/Laboratorio1'; \r\n\r\nconst AuthService = {\r\n    authenticate: async (username, password) => {\r\n        try {\r\n            // Primero autentica al usuario\r\n            const authResponse = await axios.post(`${API_URL}/authenticate`, {\r\n                username,\r\n                password,\r\n            });\r\n\r\n            if (authResponse.data && authResponse.data.token) {\r\n                // Obtiene la API Key usando el nombre de usuario\r\n                const apiKeyResponse = await axios.get(`${API_URL}/apiKey`, {\r\n                    headers: {\r\n                        username: username, // Envía el username en el header\r\n                    },\r\n                });\r\n\r\n                const apiKey = apiKeyResponse.data.apiKey;\r\n\r\n                // Ahora realiza otra solicitud que requiere el apikey\r\n                const secureResponse = await axios.get(`${API_URL}/someSecureEndpoint`, {\r\n                    headers: {\r\n                        apikey: apiKey, // Incluye el apikey en los encabezados\r\n                    },\r\n                });\r\n\r\n                return {\r\n                    token: authResponse.data.token,\r\n                    apikey: apiKey, // Guarda la API Key de la respuesta\r\n                    secureData: secureResponse.data, // Si necesitas datos seguros\r\n                };\r\n            } else {\r\n                throw new Error('No se pudo autenticar al usuario');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error en la autenticación', error);\r\n            throw error; // Propaga el error para manejarlo en el componente\r\n        }\r\n    },\r\n};\r\n\r\nexport default AuthService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,MAAMC,WAAW,GAAG;EAChBC,YAAY,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACxC,IAAI;MACA;MACA,MAAMC,YAAY,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,eAAe,EAAE;QAC7DG,QAAQ;QACRC;MACJ,CAAC,CAAC;MAEF,IAAIC,YAAY,CAACE,IAAI,IAAIF,YAAY,CAACE,IAAI,CAACC,KAAK,EAAE;QAC9C;QACA,MAAMC,cAAc,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGV,OAAO,SAAS,EAAE;UACxDW,OAAO,EAAE;YACLR,QAAQ,EAAEA,QAAQ,CAAE;UACxB;QACJ,CAAC,CAAC;QAEF,MAAMS,MAAM,GAAGH,cAAc,CAACF,IAAI,CAACK,MAAM;;QAEzC;QACA,MAAMC,cAAc,GAAG,MAAMd,KAAK,CAACW,GAAG,CAAC,GAAGV,OAAO,qBAAqB,EAAE;UACpEW,OAAO,EAAE;YACLG,MAAM,EAAEF,MAAM,CAAE;UACpB;QACJ,CAAC,CAAC;QAEF,OAAO;UACHJ,KAAK,EAAEH,YAAY,CAACE,IAAI,CAACC,KAAK;UAC9BM,MAAM,EAAEF,MAAM;UAAE;UAChBG,UAAU,EAAEF,cAAc,CAACN,IAAI,CAAE;QACrC,CAAC;MACL,CAAC,MAAM;QACH,MAAM,IAAIS,KAAK,CAAC,kCAAkC,CAAC;MACvD;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK,CAAC,CAAC;IACjB;EACJ;AACJ,CAAC;AAED,eAAehB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}