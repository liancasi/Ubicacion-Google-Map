{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\UpdatePerson.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport PersonaService from '../services/PersonaService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePerson = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Maneja el caso en que location.state puede ser null\n  const {\n    persona\n  } = location.state || {\n    persona: null\n  };\n\n  // Verifica si persona es null y muestra un mensaje si es así\n  if (!persona) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No se encontr\\xF3 la informaci\\xF3n de la persona.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Establece el estado inicial con los valores de la persona\n  const [primerNombre, setPrimerNombre] = useState(persona.primerNombre);\n  const [segundoNombre, setSegundoNombre] = useState(persona.segundoNombre);\n  const handleUpdate = async () => {\n    const updatedPersona = {\n      ...persona,\n      primerNombre,\n      segundoNombre\n    };\n\n    // Llama al servicio para actualizar\n    await PersonaService.update(updatedPersona); // Implementa este método en PersonaService\n\n    // Redirige después de actualizar\n    navigate('/home');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Actualizar Persona\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: primerNombre,\n      onChange: e => setPrimerNombre(e.target.value),\n      placeholder: \"Primer Nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: segundoNombre,\n      onChange: e => setSegundoNombre(e.target.value),\n      placeholder: \"Segundo Nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdate,\n      children: \"Actualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePerson, \"5YaK82wzCY7Ekak649wynVCErN4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = UpdatePerson;\nexport default UpdatePerson;\nvar _c;\n$RefreshReg$(_c, \"UpdatePerson\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","PersonaService","jsxDEV","_jsxDEV","UpdatePerson","_s","navigate","location","persona","state","children","fileName","_jsxFileName","lineNumber","columnNumber","primerNombre","setPrimerNombre","segundoNombre","setSegundoNombre","handleUpdate","updatedPersona","update","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/UpdatePerson.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport PersonaService from '../services/PersonaService';\r\n\r\nconst UpdatePerson = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    \r\n    // Maneja el caso en que location.state puede ser null\r\n    const { persona } = location.state || { persona: null };\r\n\r\n    // Verifica si persona es null y muestra un mensaje si es así\r\n    if (!persona) {\r\n        return <div>No se encontró la información de la persona.</div>;\r\n    }\r\n\r\n    // Establece el estado inicial con los valores de la persona\r\n    const [primerNombre, setPrimerNombre] = useState(persona.primerNombre);\r\n    const [segundoNombre, setSegundoNombre] = useState(persona.segundoNombre);\r\n\r\n    const handleUpdate = async () => {\r\n        const updatedPersona = { ...persona, primerNombre, segundoNombre };\r\n        \r\n        // Llama al servicio para actualizar\r\n        await PersonaService.update(updatedPersona); // Implementa este método en PersonaService\r\n        \r\n        // Redirige después de actualizar\r\n        navigate('/home'); \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Actualizar Persona</h2>\r\n            <input \r\n                value={primerNombre} \r\n                onChange={(e) => setPrimerNombre(e.target.value)} \r\n                placeholder=\"Primer Nombre\" \r\n            />\r\n            <input \r\n                value={segundoNombre} \r\n                onChange={(e) => setSegundoNombre(e.target.value)} \r\n                placeholder=\"Segundo Nombre\" \r\n            />\r\n            <button onClick={handleUpdate}>Actualizar</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdatePerson;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM;IAAES;EAAQ,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI;IAAED,OAAO,EAAE;EAAK,CAAC;;EAEvD;EACA,IAAI,CAACA,OAAO,EAAE;IACV,oBAAOL,OAAA;MAAAO,QAAA,EAAK;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClE;;EAEA;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAACU,OAAO,CAACO,YAAY,CAAC;EACtE,MAAM,CAACE,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAACU,OAAO,CAACS,aAAa,CAAC;EAEzE,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,cAAc,GAAG;MAAE,GAAGZ,OAAO;MAAEO,YAAY;MAAEE;IAAc,CAAC;;IAElE;IACA,MAAMhB,cAAc,CAACoB,MAAM,CAACD,cAAc,CAAC,CAAC,CAAC;;IAE7C;IACAd,QAAQ,CAAC,OAAO,CAAC;EACrB,CAAC;EAED,oBACIH,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAAO,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BX,OAAA;MACImB,KAAK,EAAEP,YAAa;MACpBQ,QAAQ,EAAGC,CAAC,IAAKR,eAAe,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDI,WAAW,EAAC;IAAe;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFX,OAAA;MACImB,KAAK,EAAEL,aAAc;MACrBM,QAAQ,EAAGC,CAAC,IAAKN,gBAAgB,CAACM,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDI,WAAW,EAAC;IAAgB;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFX,OAAA;MAAQwB,OAAO,EAAER,YAAa;MAAAT,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd,CAAC;AAACT,EAAA,CA1CID,YAAY;EAAA,QACGJ,WAAW,EACXD,WAAW;AAAA;AAAA6B,EAAA,GAF1BxB,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}