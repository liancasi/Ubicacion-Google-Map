{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [users, setUsers] = useState([]); // Estado para usuarios\n\n  useEffect(() => {\n    const loader = new Loader({\n      apiKey: \"TU_API_KEY\",\n      version: \"beta\" // Cambia a 'weekly' si no necesitas la versión beta\n    });\n    loader.load().then(google => {\n      const mapInstance = new google.maps.Map(document.getElementById(\"map\"), {\n        center: {\n          lat: 0,\n          lng: 0\n        },\n        // Ajusta la posición inicial según sea necesario\n        zoom: 2\n      });\n      setMap(mapInstance);\n    });\n  }, []);\n\n  // Simulando la carga de usuarios\n  useEffect(() => {\n    // Aquí puedes hacer una llamada a tu API para obtener los usuarios\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\"http://localhost:9001/Laboratorio1/usuarios\"); // Ajusta la URL según tu API\n        const data = await response.json();\n        setUsers(data); // Asegúrate de que el formato de 'data' sea el esperado\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Usuarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", user.primerNombre, \" \", user.segundoNombre, \" \", user.primerApellido, \" \", user.segundoApellido, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(user.id),\n          children: \"Acci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), \" \"]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"500px\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n// Función de acción para el botón\n_s(MapComponent, \"gbN4o0XkPkBUT1tIyZCbQNnjdXA=\");\n_c = MapComponent;\nconst handleButtonClick = userId => {\n  console.log(`Acción realizada para el usuario con ID: ${userId}`);\n  // Aquí puedes agregar la lógica que necesites al hacer clic en el botón\n};\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","Loader","jsxDEV","_jsxDEV","MapComponent","_s","map","setMap","users","setUsers","loader","apiKey","version","load","then","google","mapInstance","maps","Map","document","getElementById","center","lat","lng","zoom","fetchUsers","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","user","primerNombre","segundoNombre","primerApellido","segundoApellido","onClick","handleButtonClick","id","style","height","width","_c","userId","log","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Loader } from \"@googlemaps/js-api-loader\";\r\n\r\nconst MapComponent = () => {\r\n  const [map, setMap] = useState(null);\r\n  const [users, setUsers] = useState([]); // Estado para usuarios\r\n\r\n  useEffect(() => {\r\n    const loader = new Loader({\r\n      apiKey: \"TU_API_KEY\",\r\n      version: \"beta\", // Cambia a 'weekly' si no necesitas la versión beta\r\n    });\r\n\r\n    loader.load().then((google) => {\r\n      const mapInstance = new google.maps.Map(document.getElementById(\"map\"), {\r\n        center: { lat: 0, lng: 0 }, // Ajusta la posición inicial según sea necesario\r\n        zoom: 2,\r\n      });\r\n\r\n      setMap(mapInstance);\r\n    });\r\n  }, []);\r\n\r\n  // Simulando la carga de usuarios\r\n  useEffect(() => {\r\n    // Aquí puedes hacer una llamada a tu API para obtener los usuarios\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:9001/Laboratorio1/usuarios\"); // Ajusta la URL según tu API\r\n        const data = await response.json();\r\n        setUsers(data); // Asegúrate de que el formato de 'data' sea el esperado\r\n      } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de Usuarios</h1>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li key={user.id}> {/* Ajusta la clave según tu objeto de usuario */}\r\n            {user.primerNombre} {user.segundoNombre} {user.primerApellido} {user.segundoApellido}\r\n            <button onClick={() => handleButtonClick(user.id)}>Acción</button> {/* Cambia la función según necesites */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div id=\"map\" style={{ height: \"500px\", width: \"100%\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Función de acción para el botón\r\nconst handleButtonClick = (userId) => {\r\n  console.log(`Acción realizada para el usuario con ID: ${userId}`);\r\n  // Aquí puedes agregar la lógica que necesites al hacer clic en el botón\r\n};\r\n\r\nexport default MapComponent;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAG,IAAIT,MAAM,CAAC;MACxBU,MAAM,EAAE,YAAY;MACpBC,OAAO,EAAE,MAAM,CAAE;IACnB,CAAC,CAAC;IAEFF,MAAM,CAACG,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;MAC7B,MAAMC,WAAW,GAAG,IAAID,MAAM,CAACE,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;QACtEC,MAAM,EAAE;UAAEC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAE,CAAC;QAAE;QAC5BC,IAAI,EAAE;MACR,CAAC,CAAC;MAEFjB,MAAM,CAACS,WAAW,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjB,SAAS,CAAC,MAAM;IACd;IACA,MAAM0B,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC,CAAC,CAAC;QAC7E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCpB,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDL,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BjC,OAAA;MAAA6B,QAAA,EACGxB,KAAK,CAACF,GAAG,CAAE+B,IAAI,iBACdlC,OAAA;QAAA6B,QAAA,GAAkB,GAAC,EAChBK,IAAI,CAACC,YAAY,EAAC,GAAC,EAACD,IAAI,CAACE,aAAa,EAAC,GAAC,EAACF,IAAI,CAACG,cAAc,EAAC,GAAC,EAACH,IAAI,CAACI,eAAe,eACpFtC,OAAA;UAAQuC,OAAO,EAAEA,CAAA,KAAMC,iBAAiB,CAACN,IAAI,CAACO,EAAE,CAAE;UAAAZ,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC;MAAA,GAF5DC,IAAI,CAACO,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLjC,OAAA;MAAKyC,EAAE,EAAC,KAAK;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;;AAED;AAAA/B,EAAA,CApDMD,YAAY;AAAA4C,EAAA,GAAZ5C,YAAY;AAqDlB,MAAMuC,iBAAiB,GAAIM,MAAM,IAAK;EACpClB,OAAO,CAACmB,GAAG,CAAC,4CAA4CD,MAAM,EAAE,CAAC;EACjE;AACF,CAAC;AAED,eAAe7C,YAAY;AAAC,IAAA4C,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}