{"ast":null,"code":"const API_URL = 'http://localhost:9001/Laboratorio1';\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\nexport const fetchPersonas = async () => {\n  const token = getToken();\n  const response = await fetch(`${API_URL}/personas`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Error al cargar personas');\n  }\n  return await response.json();\n};\nexport const deletePersona = async id => {\n  const token = getToken();\n  const response = await fetch(`${API_URL}/personas/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Error al eliminar la persona');\n  }\n};\nexport const updatePersona = async persona => {\n  const token = getToken();\n  const response = await fetch(`${API_URL}/persona`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(persona)\n  });\n  if (!response.ok) {\n    throw new Error('Error al actualizar la persona');\n  }\n};","map":{"version":3,"names":["API_URL","getToken","localStorage","getItem","fetchPersonas","token","response","fetch","headers","ok","Error","json","deletePersona","id","method","updatePersona","persona","body","JSON","stringify"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/services/PersonaService.js"],"sourcesContent":["const API_URL = 'http://localhost:9001/Laboratorio1';\r\n\r\nconst getToken = () => {\r\n    return localStorage.getItem('token');\r\n};\r\n\r\nexport const fetchPersonas = async () => {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_URL}/personas`, {\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error('Error al cargar personas');\r\n    }\r\n    return await response.json();\r\n};\r\n\r\nexport const deletePersona = async (id) => {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_URL}/personas/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error('Error al eliminar la persona');\r\n    }\r\n};\r\n\r\nexport const updatePersona = async (persona) => {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_URL}/persona`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(persona)\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error('Error al actualizar la persona');\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,oCAAoC;AAEpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,WAAW,EAAE;IAChDQ,OAAO,EAAE;MACL,eAAe,EAAE,UAAUH,KAAK;IACpC;EACJ,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;EACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AAChC,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;EACvC,MAAMR,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,aAAaa,EAAE,EAAE,EAAE;IACtDC,MAAM,EAAE,QAAQ;IAChBN,OAAO,EAAE;MACL,eAAe,EAAE,UAAUH,KAAK;IACpC;EACJ,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACnD;AACJ,CAAC;AAED,OAAO,MAAMK,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC5C,MAAMX,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,UAAU,EAAE;IAC/Cc,MAAM,EAAE,KAAK;IACbN,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUH,KAAK;IACpC,CAAC;IACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,OAAO;EAChC,CAAC,CAAC;EACF,IAAI,CAACV,QAAQ,CAACG,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;EACrD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}