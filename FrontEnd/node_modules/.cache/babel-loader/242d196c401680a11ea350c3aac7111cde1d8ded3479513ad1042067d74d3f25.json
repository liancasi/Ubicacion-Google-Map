{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:9001/Laboratorio1'; // Cambia esto a tu URL base\n\n// Crear un objeto para el servicio\nconst CoordenadasService = {\n  // Método para obtener todas las coordenadas\n  getCoordenadas: async token => {\n    try {\n      const response = await axios.get(`${API_URL}/coordenadas`, {\n        headers: {\n          'Authorization': `Bearer ${token}` // Si se requiere un token\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching coordinates:', error);\n      throw error; // Lanza el error para que pueda ser manejado en el componente\n    }\n  },\n  // Método para obtener las coordenadas individuales por ID\n  getCoordenadasIndividual: async (id, token) => {\n    try {\n      const response = await axios.get(`${API_URL}/coordenadas/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}` // Si se requiere un token\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching individual coordinates:', error);\n      throw error; // Lanza el error para que pueda ser manejado en el componente\n    }\n  }\n};\nexport default CoordenadasService;","map":{"version":3,"names":["axios","API_URL","CoordenadasService","getCoordenadas","token","response","get","headers","data","error","console","getCoordenadasIndividual","id"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/services/CoordenadasService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:9001/Laboratorio1'; // Cambia esto a tu URL base\r\n\r\n// Crear un objeto para el servicio\r\nconst CoordenadasService = {\r\n  // Método para obtener todas las coordenadas\r\n  getCoordenadas: async (token) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/coordenadas`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}` // Si se requiere un token\r\n        }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching coordinates:', error);\r\n      throw error; // Lanza el error para que pueda ser manejado en el componente\r\n    }\r\n  },\r\n\r\n  // Método para obtener las coordenadas individuales por ID\r\n  getCoordenadasIndividual: async (id, token) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/coordenadas/${id}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}` // Si se requiere un token\r\n        }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching individual coordinates:', error);\r\n      throw error; // Lanza el error para que pueda ser manejado en el componente\r\n    }\r\n  }\r\n};\r\n\r\nexport default CoordenadasService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC,CAAC,CAAC;;AAEtD;AACA,MAAMC,kBAAkB,GAAG;EACzB;EACAC,cAAc,EAAE,MAAOC,KAAK,IAAK;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,OAAO,cAAc,EAAE;QACzDM,OAAO,EAAE;UACP,eAAe,EAAE,UAAUH,KAAK,EAAE,CAAC;QACrC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED;EACAE,wBAAwB,EAAE,MAAAA,CAAOC,EAAE,EAAER,KAAK,KAAK;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,OAAO,gBAAgBW,EAAE,EAAE,EAAE;QAC/DL,OAAO,EAAE;UACP,eAAe,EAAE,UAAUH,KAAK,EAAE,CAAC;QACrC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D,MAAMA,KAAK,CAAC,CAAC;IACf;EACF;AACF,CAAC;AAED,eAAeP,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}