{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\UpdatePerson.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport PersonaService from '../services/PersonaService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePerson = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    persona\n  } = location.state;\n  const [primerNombre, setPrimerNombre] = useState(persona.primerNombre);\n  const [segundoNombre, setSegundoNombre] = useState(persona.segundoNombre);\n  const handleUpdate = async () => {\n    const updatedPersona = {\n      ...persona,\n      primerNombre,\n      segundoNombre\n    };\n    // Llama al servicio para actualizar\n    await PersonaService.update(updatedPersona); // Necesitarás implementar este método en PersonaService\n    navigate('/home'); // Redirige después de actualizar\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Actualizar Persona\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: primerNombre,\n      onChange: e => setPrimerNombre(e.target.value),\n      placeholder: \"Primer Nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: segundoNombre,\n      onChange: e => setSegundoNombre(e.target.value),\n      placeholder: \"Segundo Nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdate,\n      children: \"Actualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePerson, \"5YaK82wzCY7Ekak649wynVCErN4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = UpdatePerson;\nexport default UpdatePerson;\nvar _c;\n$RefreshReg$(_c, \"UpdatePerson\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","PersonaService","jsxDEV","_jsxDEV","UpdatePerson","_s","navigate","location","persona","state","primerNombre","setPrimerNombre","segundoNombre","setSegundoNombre","handleUpdate","updatedPersona","update","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/UpdatePerson.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport PersonaService from '../services/PersonaService';\r\n\r\nconst UpdatePerson = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { persona } = location.state;\r\n\r\n    const [primerNombre, setPrimerNombre] = useState(persona.primerNombre);\r\n    const [segundoNombre, setSegundoNombre] = useState(persona.segundoNombre);\r\n\r\n    const handleUpdate = async () => {\r\n        const updatedPersona = { ...persona, primerNombre, segundoNombre };\r\n        // Llama al servicio para actualizar\r\n        await PersonaService.update(updatedPersona); // Necesitarás implementar este método en PersonaService\r\n        navigate('/home'); // Redirige después de actualizar\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Actualizar Persona</h2>\r\n            <input value={primerNombre} onChange={(e) => setPrimerNombre(e.target.value)} placeholder=\"Primer Nombre\" />\r\n            <input value={segundoNombre} onChange={(e) => setSegundoNombre(e.target.value)} placeholder=\"Segundo Nombre\" />\r\n            <button onClick={handleUpdate}>Actualizar</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdatePerson;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAQ,CAAC,GAAGD,QAAQ,CAACE,KAAK;EAElC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAACU,OAAO,CAACE,YAAY,CAAC;EACtE,MAAM,CAACE,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAACU,OAAO,CAACI,aAAa,CAAC;EAEzE,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,cAAc,GAAG;MAAE,GAAGP,OAAO;MAAEE,YAAY;MAAEE;IAAc,CAAC;IAClE;IACA,MAAMX,cAAc,CAACe,MAAM,CAACD,cAAc,CAAC,CAAC,CAAC;IAC7CT,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACIH,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlB,OAAA;MAAOmB,KAAK,EAAEZ,YAAa;MAACa,QAAQ,EAAGC,CAAC,IAAKb,eAAe,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAe;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5GlB,OAAA;MAAOmB,KAAK,EAAEV,aAAc;MAACW,QAAQ,EAAGC,CAAC,IAAKX,gBAAgB,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAgB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/GlB,OAAA;MAAQwB,OAAO,EAAEb,YAAa;MAAAG,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd,CAAC;AAAChB,EAAA,CAvBID,YAAY;EAAA,QACGJ,WAAW,EACXD,WAAW;AAAA;AAAA6B,EAAA,GAF1BxB,YAAY;AAyBlB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}