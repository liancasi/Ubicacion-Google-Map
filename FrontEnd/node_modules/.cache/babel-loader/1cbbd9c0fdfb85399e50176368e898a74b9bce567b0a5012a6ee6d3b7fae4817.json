{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\git\\\\repository\\\\laboratoriofrontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2'; // Asegúrate de que SweetAlert2 esté instalado\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Validar entradas\n    if (!login || !password) {\n      Swal.fire('Error', 'Por favor, ingresa el login y la contraseña', 'error');\n      return;\n    }\n    try {\n      // Enviar solicitud al backend para validar usuario\n      const response = await axios.post('http://localhost:9001/Laboratorio1/personass', {\n        login,\n        password\n      });\n      if (response.status === 200) {\n        // Usuario autenticado\n        Swal.fire('Éxito', 'Usuario autenticado', 'success');\n\n        // Obtener la API Key\n        const apiKeyResponse = await axios.get(`http://localhost:9001/apiKey`, {\n          headers: {\n            'Authorization': `Bearer ${response.data.token}` // Asegúrate de que el token esté en la respuesta\n          }\n        });\n\n        // Guarda la API Key en el estado o contexto según tu lógica\n        const apiKey = apiKeyResponse.data.apiKey; // Asegúrate de que esto coincide con tu respuesta\n        console.log('API Key:', apiKey);\n\n        // Redireccionar o realizar otras acciones según sea necesario\n        navigate('/dashboard'); // Cambia a la ruta correspondiente\n      }\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error);\n      Swal.fire('Error', 'Credenciales inválidas o error en la red', 'error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          className: \"form-label\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"login\",\n          value: login,\n          onChange: e => setLogin(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"f1Up5sUSA9c71Nwa8sYiT3vqSAs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Swal","jsxDEV","_jsxDEV","Login","_s","login","setLogin","password","setPassword","navigate","handleLogin","e","preventDefault","fire","response","post","status","apiKeyResponse","get","headers","data","token","apiKey","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/git/repository/laboratoriofrontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2'; // Asegúrate de que SweetAlert2 esté instalado\r\n\r\nconst Login = () => {\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validar entradas\r\n        if (!login || !password) {\r\n            Swal.fire('Error', 'Por favor, ingresa el login y la contraseña', 'error');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Enviar solicitud al backend para validar usuario\r\n            const response = await axios.post('http://localhost:9001/Laboratorio1/personass', {\r\n                login,\r\n                password,\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                // Usuario autenticado\r\n                Swal.fire('Éxito', 'Usuario autenticado', 'success');\r\n                \r\n                // Obtener la API Key\r\n                const apiKeyResponse = await axios.get(`http://localhost:9001/apiKey`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${response.data.token}`, // Asegúrate de que el token esté en la respuesta\r\n                    }\r\n                });\r\n                \r\n                // Guarda la API Key en el estado o contexto según tu lógica\r\n                const apiKey = apiKeyResponse.data.apiKey; // Asegúrate de que esto coincide con tu respuesta\r\n                console.log('API Key:', apiKey);\r\n\r\n                // Redireccionar o realizar otras acciones según sea necesario\r\n                navigate('/dashboard'); // Cambia a la ruta correspondiente\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al iniciar sesión:', error);\r\n            Swal.fire('Error', 'Credenciales inválidas o error en la red', 'error');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Iniciar Sesión</h2>\r\n            <form onSubmit={handleLogin}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"login\" className=\"form-label\">Login</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"login\"\r\n                        value={login}\r\n                        onChange={(e) => setLogin(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Contraseña</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Iniciar Sesión</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}